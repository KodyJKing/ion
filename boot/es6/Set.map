{"version":3,"sources":["Set.ion"],"names":["ion",{"type":"Identifier","name":"SetShim","loc":{"start":{"line":4,"column":6,"fixed":true},"end":{"line":4,"column":13,"fixed":true}}},"SetShim","items","Error","map","Map","methods","has","key","delete","add","set","forEach","callback","thisArg","value","call","Object","defineProperty","global","Set","prototype","window","console","warn","test","a","b"],"mappings":"aAAA;AAAA,IAAMA,GAAA,G,OAAM,CAAO,KAAP,CAAZ;OACA,CAAO,OAAP,EADA;AAGMC,SAAAC,OAAAD,CAAQE,KAARF,EACN;AAAA,IAAI,IAAGE,K,QAAH,EACJ;AAAA,QAAQ,MAAM,IAAIC,KAAJ,C,2EAAA,CAAN,CAAR;AAAA,KADA;AAAA,IAEI,IAAIC,GAAA,GAAM,IAAIC,GAAJ,EAAV,CAFJ;AAAA,IAGI,IAAMC,OAAA,GAAS;AAAA,YACXC,GAAA,EAAKP,UAACQ,GAADR,E;uBAASI,GAAA,CAAIG,GAAJ,CAAQC,GAAR,C;aADH;AAAA,YAEXC,MAAA,EAAQT,UAACQ,GAADR,E;uBAASI,GAAA,CAAIK,MAAJ,CAAWD,GAAX,C;aAFN;AAAA,YAGXE,GAAA,EAAKV,UAACQ,GAADR,E;uBAASI,GAAA,CAAIO,GAAJ,CAAQH,GAAR,EAAa,IAAb,C;aAHH;AAAA,YAIXI,OAAA,EAASZ,UAACa,QAADb,EAAWc,OAAXd,EACjB;AAAA,gBAAYI,GAAA,CAAIQ,OAAJ,C,SACI,UAACG,KAAD,EAAQP,GAAR,EAChB;AAAA,oBAAoBK,QAAA,CAASG,IAAT,CAAcF,OAAd,EAAuBN,GAAvB,EAA4B,IAA5B,EAApB;AAAA,iB,OAFY,EAAZ;AAAA,aALmB;AAAA,SAAf,CAHJ;AAAA,IAYI,SAAIA,GAAJ,IAAkBF,OAAlB,EACJ;AAAA,Q,IADaS,K,GAAST,O,CAAdE,G,EACR;AAAA,QAAQS,MAAA,CAAOC,cAAP,CAAsB,IAAtB,EAAyBV,GAAzB,EAA8B,EAACO,KAAA,EAAAA,KAAD,EAA9B,EAAR;AAAA,KAbA;AAAA,CAJA;AAoBA,IAAG,C,CAAII,MAAA,CAAOC,G,SAAX,IAAmB,C,CAAIA,GAAA,CAAIC,SAAJ,CAAcT,O,SAAxC,EACA;AAAA,IAAI,IAAGO,MAAA,CAAOG,MAAV,EACJ;AAAA,QAAQC,OAAA,CAAQC,IAAR,CAAa,cAAb,EAAR;AAAA,KADA;AAAA,IAEIL,MAAA,CAAOC,GAAP,GAAanB,OAAb,CAFJ;AAAA,CArBA;AAyBO,IAAMwB,IAAA,G,QAAAA,I,GAAOzB,YACpB;AAAA,QAAI,IAAMoB,GAAA,GAAMD,MAAA,CAAOC,GAAnB,CAAJ;AAAA,QACI,IAAIM,CAAA,GAAI,EAAR,CADJ;AAAA,QAEI,IAAIC,CAAA,GAAI3B,Y;SAAR,CAFJ;AAAA,QAGI,IAAIW,GAAA,GAAM,IAAIS,GAAJ,EAAV,CAHJ;AAAA,QAIIT,GAAA,CAAID,GAAJ,CAAQgB,CAAR,EAJJ;AAAA,QAKIf,GAAA,CAAID,GAAJ,CAAQiB,CAAR,EALJ;AAAA,Q,KAMWhB,GAAA,CAAIJ,GAAJ,CAAQmB,CAAR,C;8DANX;AAAA,Q,KAOWf,GAAA,CAAIJ,GAAJ,CAAQoB,CAAR,C;8DAPX;AAAA,QAQIhB,GAAA,CAAIF,MAAJ,CAAWkB,CAAX,EARJ;AAAA,Q,KASW,CAAIhB,GAAA,CAAIJ,GAAJ,CAAQoB,CAAR,C;kEATf;AAAA,QAUIhB,GAAA,CAAID,GAAJ,CAAQiB,CAAR,EAVJ;AAAA,Q,KAWWhB,GAAA,CAAIJ,GAAJ,CAAQoB,CAAR,C;8DAXX;AAAA,KADO","sourcesContent":["const ion = import '../'\r\nimport './Map'\r\n\r\nconst SetShim(items) ->\r\n    if items?\r\n        throw new Error(\"Don't add items in the constructor, IE implementation of Set breaks this\")\r\n    let map = new Map\r\n    const methods =\r\n        has: (key) -> map.has(key)\r\n        delete: (key) -> map.delete(key)\r\n        add: (key) -> map.set(key, true)\r\n        forEach: (callback, thisArg) ->\r\n            map.forEach(\r\n                (value, key) =>\r\n                    callback.call(thisArg, key, @)\r\n            )\r\n    for key, value of methods\r\n        Object.defineProperty(@, key, {value})\r\n\r\n# we will even replace Googles crap implementation of Map that doesn't yet have forEach or keys\r\nif not global.Set? or not Set.prototype.forEach?\r\n    if global.window\r\n        console.warn('Shimming Set')\r\n    global.Set = SetShim\r\n\r\nexport const test = ->\r\n    const Set = global.Set\r\n    let a = {}\r\n    let b = ->\r\n    let set = new Set()\r\n    set.add(a)\r\n    set.add(b)\r\n    assert set.has(a)\r\n    assert set.has(b)\r\n    set.delete(b)\r\n    assert not set.has(b)\r\n    set.add(b)\r\n    assert set.has(b)\r\n"]}