{"version":3,"sources":["index.ion"],"names":["ion","primitive","string","number","boolean","function","isPrimitive",{"type":"Identifier","name":"isPrimitive","loc":{"start":{"line":7,"column":4,"fixed":true},"end":{"line":7,"column":15,"fixed":true}}},"object","normalizeProperty","property","writable","value","Array","isArray","get","set","hasOwnProperty","normalizeProperties","properties","name","variableArgConstructs","type","a","nodeObserveShim","Object","observe","checkForChanges","createShim","patch","mergePatch","merge","key","create","args","length","template","fn","createRuntime","ast","Context","context","setVariable","nextTick","process","setTimeout","clone","deep","item","constructor","observer","global","console","nodeType","addEventListener","onObserved","unobserve","removeEventListener","unObserved","bind","thisArg","newFn","id","add","container","remove","originalItem","apply","arguments","JSON","stringify","document","createTextNode","appendChild","removeChild","push","lastIndexOf","removeAt","index","splice","onAdded","onRemoved","defineProperties","defineClass","definitions","classDefinition","super","match","Error","classFunction","eval","canSetClassProperty","descriptor","getOwnPropertyDescriptor","i","definition","prototype","deleteUndefined","k","v","onSet","is","instance","makeReactive","activate","observeCount","deactivate","call","serialize","deserialize","extractType","typeKey","typeName","serializable","parse","typedObject","test","Foo","getValue","result","f","b","s","window","log"],"mappings":"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","sourcesContent":["const ion = null # shouldn't depend on itself\r\n\r\nimport './es6'\r\n\r\nconst\r\n    primitive = {string:true,number:true,boolean:true,function:true}\r\n    isPrimitive = (object) -> not object? or primitive[typeof object] or false\r\n    normalizeProperty = (property) ->\r\n        if typeof property is 'function'\r\n            property =\r\n                writable: false\r\n                value: property\r\n        else if isPrimitive(property) or Array.isArray(property)\r\n            property =\r\n                value: property\r\n\r\n        if not property.get? and not property.set? and not property.hasOwnProperty('value')\r\n            property.value = undefined\r\n\r\n        if property.hasOwnProperty('value')\r\n            property.writable ?= true\r\n\r\n        return property\r\n    normalizeProperties = (properties = {}) ->\r\n        for name, property of properties\r\n            properties[name] = normalizeProperty(property)\r\n        return properties\r\n    variableArgConstructs = []\r\n        (type, a) -> new type()\r\n        (type, a) -> new type(a[0])\r\n        (type, a) -> new type(a[0], a[1])\r\n        (type, a) -> new type(a[0], a[1], a[2])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9])\r\n    nodeObserveShim = Object.observe?.checkForChanges ? Object : import('./es6/Object.observe').createShim()\r\n\r\nexport const\r\n    patch = do ->\r\n        let mergePatch = import './mergePatch'\r\n        let patch = (object, patch) -> mergePatch.merge(object, patch)\r\n        for key, value of mergePatch\r\n            patch[key] = value\r\n        return patch\r\n    create = (type, args) -> variableArgConstructs[args.length](type, args)\r\n    template = (fn, template) ->\r\n        fn.template = template\r\n        return fn\r\n    createRuntime = (ast, args) ->\r\n        const Context = import './runtime/Context'\r\n        const context = new Context()\r\n        if args?\r\n            for name, value of args\r\n                context.setVariable(name, value)\r\n        return context.createRuntime(ast)\r\n    nextTick = @process?.nextTick ? (fn) -> setTimeout(fn, 0)\r\n    clone = (object, deep = false) ->\r\n        if Array.isArray(object)\r\n            return [deep ? clone(item, deep) : item for item in object]\r\n        else if object?.constructor is Object\r\n            return {}\r\n                for key, value of object\r\n                    [key]: deep ? clone(value, deep) : value\r\n        else\r\n            return object\r\n    observe = (object, observer, property) ->\r\n        if object is global or object is console\r\n            return\r\n        # property is optional\r\n        if object?.nodeType?\r\n            nodeObserveShim.observe(object, observer, property)\r\n        else if object? and observer? and Object.observe? and typeof object is 'object'\r\n            Object.observe(object, observer)\r\n            # watch change on dom elements\r\n            object.addEventListener?('change', observer)\r\n        object?.onObserved?(observer, property)\r\n    unobserve = (object, observer, property) ->\r\n        # property is optional\r\n        if object?.nodeType?\r\n            nodeObserveShim.unobserve(object, observer, property)\r\n        else if object? and observer? and Object.unobserve? and typeof object is 'object'\r\n            Object.unobserve(object, observer)\r\n            # unwatch change on dom elements\r\n            object.removeEventListener?('change', observer)\r\n        object?.unObserved?(observer, property)\r\n    checkForChanges = ->\r\n        if Object.observe.checkForChanges?\r\n            Object.observe.checkForChanges()\r\n        else\r\n            nodeObserveShim.observe.checkForChanges()\r\n    bind = (fn, thisArg) ->\r\n        let newFn = fn.bind(thisArg)\r\n        # the function name has semantic meaning for us when adding a function to an element\r\n        # (see add function below)\r\n        # so we copy the function name to the new bound function id property when binding\r\n        # (function.name is readonly)\r\n        if fn.name?.length > 0\r\n            newFn.id = fn.id ? fn.name\r\n        return newFn\r\n    add = (container, item) ->\r\n        let remove\r\n        if typeof item is 'function' and (item.name?.length > 0 or item.id?) and typeof container.addEventListener is 'function'\r\n            let name = item.id ? item.name\r\n            # if this platform doesn't have native Object.observe\r\n            # then we wrap all event handlers and call checkForChanges after\r\n            if Object.observe?.checkForChanges?\r\n                let originalItem = item\r\n                item = ->\r\n                    originalItem.apply(@, arguments)\r\n                    Object.observe.checkForChanges()\r\n            container.addEventListener(name, item)\r\n            remove = ->\r\n                container.removeEventListener(name, item)\r\n        else if container.nodeType is 1\r\n            if typeof item isnt 'string' and not item.nodeType?\r\n                item = JSON.stringify(item)\r\n            if typeof item is 'string'\r\n                item = document.createTextNode(item)\r\n            container.appendChild(item)\r\n            remove = ->\r\n                container.removeChild(item)\r\n        else\r\n            if container.push?\r\n                container.push(item)\r\n            else\r\n                container.add(item)\r\n            remove = ->\r\n                if container.lastIndexOf? and container.removeAt?\r\n                    let index = container.lastIndexOf(item)\r\n                    if index >= 0\r\n                        container.removeAt(index)\r\n                else if typeof container.remove is 'function'\r\n                    container.remove(item)\r\n                else if Array.isArray(container)\r\n                    let index = container.lastIndexOf(item)\r\n                    if index >= 0\r\n                        container.splice(index, 1)\r\n\r\n        item.onAdded?(container)\r\n        # returns a function which can be used to remove the item\r\n        return ->\r\n            remove()\r\n            item.onRemoved?(container)\r\n    defineProperties = (object, properties) -> Object.defineProperties(object, normalizeProperties(properties))\r\n    defineClass = (...definitions) ->\r\n        const classDefinition = definitions[0]\r\n        if definitions[1] is undefined\r\n            # extend our base object by default unless user sets extends to null explicitly.\r\n            definitions[1] = import './Object'\r\n        classDefinition.super = definitions[1]\r\n        const name = classDefinition.name ? classDefinition.id?.match(/([a-z_0-9\\$]+)(\\.js)?$/i)?[1]\r\n        if not name?\r\n            throw new Error('missing name property')\r\n        let classFunction\r\n        if classDefinition.hasOwnProperty('constructor')\r\n            classFunction = classDefinition.constructor\r\n        else if classDefinition.super?\r\n            classFunction = eval(\"(function {{name}}() { {{name}}.super.apply(this, arguments); })\")\r\n        else\r\n            classFunction = eval(\"(function {{name}}() {})\")\r\n\r\n        # successively merge patch the definitions onto the new class\r\n        let canSetClassProperty = (key) ->\r\n            if key is 'name'\r\n                return false\r\n            let descriptor = Object.getOwnPropertyDescriptor(classFunction, key)\r\n            return not descriptor? or descriptor.writable or not descriptor.get?\r\n\r\n        for let i = definitions.length - 1; i >= 0; i--\r\n            let definition = definitions[i]\r\n            for key, value of definition if key isnt 'test' or i is 0\r\n                if canSetClassProperty(key)\r\n                    classFunction[key] = patch(classFunction[key], value)\r\n\r\n        if classFunction.properties?\r\n            defineProperties(classFunction.prototype, classFunction.properties)\r\n\r\n        return classFunction\r\n    get = (object, property) ->\r\n        if not (object? and property?)\r\n            return undefined\r\n        if object isnt @ and typeof object.get is 'function'\r\n            return object.get(property)\r\n        else\r\n            return object[property]\r\n    set = (object, property, value, deleteUndefined = true) ->\r\n        # console.log('ion.set', property, value)\r\n        if object?\r\n            if arguments.length is 2 and property?\r\n                # set all properties\r\n                for k, v of property\r\n                    set(object, k, v)\r\n                return\r\n\r\n            if object isnt @ and typeof object.set is 'function'\r\n                object.set(property, value)\r\n            else if deleteUndefined and value is undefined\r\n                delete object[property]\r\n            else\r\n                object[property] = value\r\n            # we will notify an object when it is set on another object\r\n            # if the object has an onSet \r\n            value?.onSet?(object, property)\r\n        return value\r\n    is = (instance, type) ->\r\n        if not instance?\r\n            return false\r\n        if not type?\r\n            return true\r\n        if typeof type is 'function'\r\n            if typeof instance.is is 'function'\r\n                return instance.is(type)\r\n            return instance instanceof type\r\n        else\r\n            return instance is type\r\n    makeReactive = (object, activate) ->\r\n        let observeCount = 0\r\n        let deactivate = null\r\n        return (Object.defineProperties)\r\n            object\r\n            {}\r\n                onObserved:\r\n                    value: ->\r\n                        observeCount++\r\n                        if observeCount is 1\r\n                            deactivate = activate.call(object)\r\n                unObserved:\r\n                    value: ->\r\n                        observeCount--\r\n                        if observeCount is 0\r\n                            deactivate?()\r\n    serialize = (object) -> JSON.stringify(object)\r\n    deserialize = do ->\r\n        let extractType = (object) ->\r\n            let typeKey = import('ion/Object').typeKey\r\n            # we should strongly type our objects when created, so make a factory\r\n            let typeName = object[typeKey]\r\n            if not typeName?\r\n                return Object\r\n            let type = import(typeName)\r\n            if not type.serializable\r\n                throw new Error(\"Type is not serializable: {{ typeName }}\")\r\n            # remove the type field from the source object\r\n            delete object[typeKey]\r\n            return type\r\n        let deserialize = (object) ->\r\n            if typeof object is 'string'\r\n                object = JSON.parse(object)\r\n            let typeKey = import('ion/Object').typeKey\r\n            # we should strongly type our objects when created, so make a factory\r\n            let typeName = object[typeKey]\r\n            if typeName?\r\n                let type = import(typeName)\r\n                if not type.serializable\r\n                    throw new Error(\"Type is not serializable: {{ typeName }}\")\r\n                let typedObject = new type\r\n                for key, value of object if key isnt typeKey\r\n                    typedObject[key] = object[key]\r\n                return typedObject\r\n            else\r\n                return object\r\n        deserialize.extractType = extractType\r\n        return deserialize\r\n    test =\r\n        defineClass: ->\r\n            const Foo = (defineClass)\r\n                {}\r\n                    id: \"Foo\"\r\n                    constructor: (number) ->\r\n                        @number = number\r\n                    properties:\r\n                        getValue: -> @number\r\n            assert new Foo(2).getValue() is 2\r\n        defineProperties:\r\n            \"should allow primitive values\": ->\r\n                const object = {}\r\n                const result = (defineProperties)\r\n                    object\r\n                    {}\r\n                        f: -> \"function\"\r\n                        i: 2\r\n                        b: true\r\n                        a: []\r\n                        s: \"hello\"\r\n                assert object is result\r\n                assert typeof object.f is 'function'\r\n                assert object.f() is 'function'\r\n                assert object.i is 2\r\n                assert object.b is true\r\n                assert Array.isArray(object.a)\r\n                assert object.s is 'hello'\r\n\r\n# if window, then on resize, check for changes\r\nif global.window?\r\n    (global.window.addEventListener)\r\n        'resize'\r\n        ->\r\n            console.log('window resized')\r\n            checkForChanges()\r\n"]}