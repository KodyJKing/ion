{"version":3,"sources":["index.ion"],"names":["ion","global","DEBUG","primitive","string","number","boolean","function","isPrimitive",{"type":"Identifier","name":"isPrimitive","loc":{"start":{"line":9,"column":4,"fixed":true,"source":"ion/index.ion"},"end":{"line":9,"column":15,"fixed":true,"source":"ion/index.ion"}}},"object","normalizeProperty","property","name","writable","value","Array","isArray","get","set","hasOwnProperty","normalizeProperties","properties","variableArgConstructs","type","a","nodeObserveShim","Object","observe","checkForChanges","createShim","isObjectObservable","Node","NodeList","patch","mergePatch","merge","key","create","args","length","setImmediate","document","hiddenDiv","createElement","callbacks","mo","MutationObserver","records","cbList","callback","attributes","setAttribute","push","fn","setTimeout","template","createRuntime","ast","parent","Context","context","setVariableLiteral","nextTick","process","clone","deep","item","constructor","observer","console","tryWrapper","changes","error","addEventListener","onObserved","unobserve","removeEventListener","unObserved","bind","thisArg","newFn","id","add","container","remove","capture","captureSuffix","endsWith","substring","originalItem","apply","arguments","nodeType","JSON","stringify","createTextNode","appendChild","parentNode","removeChild","lastIndexOf","removeAt","index","splice","onAdded","onRemoved","defineProperties","defineClass","definitions","classDefinition","super","match","Error","classFunction","eval","canSetClassProperty","descriptor","getOwnPropertyDescriptor","types","Set","i","definition","prototype","is","instance","makeReactive","activate","observeCount","deactivate","call","serialize","deserialize","extractType","typeKey","typeName","serializable","parse","typedObject","test","Foo","getValue","result","f","b","s","window"],"mappings":"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","sourcesContent":["const ion = null # shouldn't depend on itself\n\nimport './es6'\n\nglobal.DEBUG ?= false\n\nconst\n    primitive = {string:true,number:true,boolean:true,function:true}\n    isPrimitive = (object) -> not object? or primitive[typeof object] or false\n    normalizeProperty = (property, name) ->\n        if typeof property is 'function'\n            property =\n                writable: false\n                value: property\n        else if isPrimitive(property) or Array.isArray(property)\n            property =\n                value: property\n\n        if not property.get? and not property.set? and not property.hasOwnProperty('value')\n            property.value = undefined\n\n        if property.hasOwnProperty('value')\n            property.writable ?= true\n\n        property.name = name\n\n        return property\n    normalizeProperties = (properties = {}) ->\n        for name, property of properties\n            properties[name] = normalizeProperty(property, name)\n        return properties\n    variableArgConstructs = []\n        (type, a) -> new type()\n        (type, a) -> new type(a[0])\n        (type, a) -> new type(a[0], a[1])\n        (type, a) -> new type(a[0], a[1], a[2])\n        (type, a) -> new type(a[0], a[1], a[2], a[3])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9])\n    nodeObserveShim = Object.observe?.checkForChanges ? Object : import('./es6/Object.observe').createShim()\n    isObjectObservable = do ->\n        let Node = global.Node ? ->\n        let NodeList = global.NodeList ? ->\n        return (a) ->\n            if a instanceof Node or a instanceof NodeList\n                return false\n            return true\n\nexport const\n    patch = do ->\n        let mergePatch = import './mergePatch'\n        let patch = (object, patch) -> mergePatch.merge(object, patch)\n        for key, value of mergePatch\n            patch[key] = value\n        return patch\n    create = (type, args) -> variableArgConstructs[args.length](type, args)\n    setImmediate = do ->\n        if global.setImmediate?\n            return global.setImmediate\n        if global.document?\n            return do ->\n                let hiddenDiv = document.createElement(\"div\")\n                let callbacks = []\n                let mo = new MutationObserver(\n                    (records) ->\n                        let cbList = callbacks\n                        callbacks = []\n                        for callback in cbList\n                            callback()\n                )\n                mo.observe(hiddenDiv, { attributes: true })\n            return setImmediate(callback) ->\n                if (callbacks.length is 0)\n                    hiddenDiv.setAttribute('yes', 'no')\n                callbacks.push(callback)\n        return (fn) ->\n            setTimeout(fn, 0)\n    template = (fn, template) ->\n        fn.template = template ? true\n        return fn\n    createRuntime = (ast, args, parent) ->\n        const Context = import './runtime/Context'\n        const context = new Context(parent)\n        if args?\n            for name, value of args\n                context.setVariableLiteral(name, value)\n        return context.createRuntime(ast)\n    nextTick = @process?.nextTick ? (fn) -> setTimeout(fn, 0)\n    clone = (object, deep = false) ->\n        if Array.isArray(object)\n            return [deep ? clone(item, deep) : item for item in object]\n        else if object?.constructor is Object\n            return {}\n                for key, value of object\n                    [key]: deep ? clone(value, deep) : value\n        else\n            return object\n    observe = (object, observer, property) ->\n        if object is global or object is console\n            return\n        # property is optional\n        if not isObjectObservable(object)\n            if not property?\n                return\n            nodeObserveShim.observe(object, observer, property)\n        else if object? and observer? and Object.observe? and typeof object is 'object'\n            if DEBUG\n                observer.tryWrapper ?= (changes) ->\n                    try\n                        observer(changes)\n                    catch error\n                        console.error('Exception in Object.observe callback', error)\n            Object.observe(object, observer.tryWrapper ? observer)\n            # watch change on dom elements\n            object.addEventListener?('change', observer)\n        object?.onObserved?(observer, property)\n    unobserve = (object, observer, property) ->\n        # property is optional\n        if not isObjectObservable(object)\n            if not property?\n                return\n            nodeObserveShim.unobserve(object, observer, property)\n        else if object? and observer? and Object.unobserve? and typeof object is 'object'\n            Object.unobserve(object, observer.tryWrapper ? observer)\n            # unwatch change on dom elements\n            object.removeEventListener?('change', observer)\n        object?.unObserved?(observer, property)\n    checkForChanges = ->\n        if Object.observe.checkForChanges?\n            Object.observe.checkForChanges()\n        else\n            nodeObserveShim.observe.checkForChanges()\n    bind = (fn, thisArg) ->\n        let newFn = fn.bind(thisArg)\n        # the function name has semantic meaning for us when adding a function to an element\n        # (see add function below)\n        # so we copy the function name to the new bound function id property when binding\n        # (function.name is readonly)\n        if fn.name?.length > 0\n            newFn.id = fn.id ? fn.name\n        return newFn\n    add = (container, item) ->\n        let remove\n        if typeof item is 'function' and (item.name?.length > 0 or item.id?) and typeof container.addEventListener is 'function'\n            let name = item.id ? item.name\n            let capture = false\n            let captureSuffix = '_capture'\n            if name.endsWith(captureSuffix)\n                capture = true\n                name = name.substring(0, name.length - captureSuffix.length)\n            # if this platform doesn't have native Object.observe\n            # then we wrap all event handlers and call checkForChanges after\n            if Object.observe?.checkForChanges?\n                let originalItem = item\n                item = ->\n                    originalItem.apply(@, arguments)\n                    Object.observe.checkForChanges()\n            container.addEventListener(name, item, capture)\n            remove = ->\n                container.removeEventListener(name, item)\n        else if container.nodeType is 1\n            if typeof item isnt 'string' and not item.nodeType?\n                item = JSON.stringify(item)\n            if typeof item is 'string'\n                item = document.createTextNode(item)\n            container.appendChild(item)\n            remove = ->\n                if item.parentNode is container\n                    container.removeChild(item)\n        else\n            if container.push?\n                container.push(item)\n            else\n                container.add(item)\n            remove = ->\n                if container.lastIndexOf? and container.removeAt?\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.removeAt(index)\n                else if typeof container.remove is 'function'\n                    container.remove(item)\n                else if Array.isArray(container)\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.splice(index, 1)\n\n        item?.onAdded?(container)\n        # returns a function which can be used to remove the item\n        return ->\n            remove()\n            item?.onRemoved?(container)\n    defineProperties = (object, properties) -> Object.defineProperties(object, normalizeProperties(properties))\n    defineClass = (...definitions) ->\n        const classDefinition = definitions[0]\n        if definitions[1] is undefined\n            # extend our base object by default unless user sets extends to null explicitly.\n            definitions[1] = import './Object'\n        classDefinition.super = definitions[1]\n        const name = classDefinition.name ? classDefinition.id?.match(/([a-z_0-9\\$]+)(\\.js)?$/i)?[1]\n        if not name?\n            throw new Error('missing name property')\n        let classFunction\n        if classDefinition.hasOwnProperty('constructor')\n            classFunction = classDefinition.constructor\n        else if classDefinition.super?\n            classFunction = eval(\"(function {{name}}() { {{name}}.super.apply(this, arguments); })\")\n        else\n            classFunction = eval(\"(function {{name}}() {})\")\n\n        # successively merge patch the definitions onto the new class\n        let canSetClassProperty = (key) ->\n            if key is 'name'\n                return false\n            let descriptor = Object.getOwnPropertyDescriptor(classFunction, key)\n            return not descriptor? or descriptor.writable or not descriptor.get?\n\n        let types = new Set()   # a map of all types\n        types.add(classFunction)\n        for let i = definitions.length - 1; i >= 0; i--\n            let definition = definitions[i]\n            if definition?\n                types.add(definition)\n                for key, value of definition if key isnt 'test' or i is 0\n                    if canSetClassProperty(key)\n                        classFunction[key] = patch(classFunction[key], value)\n        classFunction.types = types\n\n        if classFunction.properties?\n            defineProperties(classFunction.prototype, classFunction.properties)\n\n        return classFunction\n    is = (instance, type) ->\n        if not instance?\n            return false\n        if not type?\n            return true\n        if typeof type is 'function'\n            if typeof instance.is is 'function'\n                return instance.is(type)\n            return instance instanceof type\n        else\n            return instance is type\n    makeReactive = (object, activate) ->\n        let observeCount = 0\n        let deactivate = null\n        return Object.defineProperties(\n            object\n            {}\n                onObserved:\n                    value: ->\n                        observeCount++\n                        if observeCount is 1\n                            deactivate = activate.call(object)\n                unObserved:\n                    value: ->\n                        observeCount--\n                        if observeCount is 0\n                            deactivate?()\n        )\n    serialize = (object) -> JSON.stringify(object)\n    deserialize = do ->\n        let extractType = (object) ->\n            let typeKey = import('ion/Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if not typeName?\n                return Object\n            let type = import(typeName)\n            if not type.serializable\n                throw new Error(\"Type is not serializable: {{ typeName }}\")\n            # remove the type field from the source object\n            delete object[typeKey]\n            return type\n        let deserialize = (object) ->\n            if typeof object is 'string'\n                object = JSON.parse(object)\n            let typeKey = import('ion/Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if typeName?\n                let type = import(typeName)\n                if not type.serializable\n                    throw new Error(\"Type is not serializable: {{ typeName }}\")\n                let typedObject = new type\n                for key, value of object if key isnt typeKey\n                    typedObject[key] = object[key]\n                return typedObject\n            else\n                return object\n        deserialize.extractType = extractType\n        return deserialize\n    test =\n        defineClass: ->\n            const Foo = defineClass(\n                {}\n                    id: \"Foo\"\n                    constructor: (number) ->\n                        @number = number\n                    properties:\n                        getValue: -> @number\n            )\n            assert new Foo(2).getValue() is 2\n        defineProperties:\n            \"should allow primitive values\": ->\n                const object = {}\n                const result = defineProperties(\n                    object\n                    {}\n                        f: -> \"function\"\n                        i: 2\n                        b: true\n                        a: []\n                        s: \"hello\"\n                )\n                assert object is result\n                assert typeof object.f is 'function'\n                assert object.f() is 'function'\n                assert object.i is 2\n                assert object.b is true\n                assert Array.isArray(object.a)\n                assert object.s is 'hello'\n\n# if window, then on resize, check for changes\nif global.window?\n    global.window.addEventListener('resize', checkForChanges)\n"]}