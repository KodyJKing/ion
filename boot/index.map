{"version":3,"sources":["index.ion"],"names":["ion","noop",{"type":"Identifier","name":"noop","loc":{"start":{"line":2,"column":6,"fixed":true,"source":"ion/index.ion"},"end":{"line":2,"column":10,"fixed":true,"source":"ion/index.ion"}}},"valueTypes","string","number","boolean","isValueType","object","primitive","function","isPrimitive","normalizeProperty","property","name","writable","value","Array","isArray","get","set","hasOwnProperty","normalizeProperties","properties","variableArgConstructs","type","a","observeShim","isObjectObservable","Node","global","NodeList","Location","freeze","deep","Object","key","createSortFunction","sorts","b","sort","ascending","aValue","bValue","runFile","file","require","patch","mergePatch","patchFunction","schema","merge","create","args","length","setImmediate","callback","id","clearImmediate","setTimeout","clearTimeout","requestAnimationFrame","nextTick","process","throttleAnimation","awaitingCallbackArgs","animationFrameCallback","apply","prototype","slice","call","arguments","template","fn","createRuntime","ast","parent","Context","context","setVariableLiteral","clone","_deep","item","constructor","observe","observer","options","console","removed","observable","addEventListener","onObserved","count","unobserve","removeEventListener","unObserved","warn","checkForChanges","sync","changed","nextCheck","bind","thisArg","newFn","add","container","originalItem","remove","capture","captureSuffix","endsWith","substring","toString","indexOf","nodeType","JSON","stringify","document","createTextNode","appendChild","push","removeSelf","parentNode","removeChild","lastIndexOf","removeAt","index","splice","onAdded","onRemoved","defineProperties","defineClass","definitions","classDefinition","super","match","Error","classFunction","eval","canSetClassProperty","descriptor","getOwnPropertyDescriptor","types","Set","i","definition","is","instance","makeReactive","activate","observeCount","deactivate","serialize","deserialize","extractType","namespace","typeKey","typeName","split","pop","serializable","convertType","parse","test","Foo","getValue","result","f","s","defineProperty","exports","enumerable","window"],"mappings":"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","sourcesContent":["const ion = null # shouldn't depend on itself\nconst noop = ->\n\nimport './es6'\n\nconst\n    valueTypes = {string:true,number:true,boolean:true}\n    isValueType = (object) -> not object? or valueTypes[typeof object] ? false\n    primitive = {string:true,number:true,boolean:true,function:true}\n    isPrimitive = (object) -> not object? or primitive[typeof object] or false\n    normalizeProperty = (property, name) ->\n        if typeof property is 'function'\n            property =\n                writable: false\n                value: property\n        else if isPrimitive(property) or Array.isArray(property)\n            property =\n                value: property\n\n        if not property.get? and not property.set? and not property.hasOwnProperty('value')\n            property.value = undefined\n\n        if property.hasOwnProperty('value')\n            property.writable ?= true\n\n        property.name = name\n\n        return property\n    normalizeProperties = (properties = {}) ->\n        for name, property of properties\n            properties[name] = normalizeProperty(property, name)\n        return properties\n    variableArgConstructs = []\n        (type, a) -> new type()\n        (type, a) -> new type(a[0])\n        (type, a) -> new type(a[0], a[1])\n        (type, a) -> new type(a[0], a[1], a[2])\n        (type, a) -> new type(a[0], a[1], a[2], a[3])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9])\n    observeShim = import './es6/Object.observe'\n    isObjectObservable = do ->\n        let Node = global.Node ? ->\n        let NodeList = global.NodeList ? ->\n        let Location = global.Location ? ->\n        return (a) ->\n            if a instanceof Node or a instanceof NodeList or a instanceof Location\n                return false\n            return true\n\nexport const\n    freeze = (object, deep = true) ->\n        Object.freeze(object)\n        if deep\n            for key, value of object if value? and typeof value is 'object'\n                freeze(value, deep)\n        return object\n    # sort = [{name:true},{age:false}]\n    createSortFunction = (sorts) ->\n        return (a, b) ->\n            if a is b\n                return 0\n            if not a?\n                return b\n            if not b?\n                return a\n            for sort in sorts\n                for name, ascending of sort\n                    let aValue = a[name]\n                    let bValue = b[name]\n                    if aValue > bValue\n                        return ascending ? +1 : -1\n                    if aValue < bValue\n                        return ascending ? -1 : +1\n            return 0\n    runFile = (file) -> require('./builder').runFile(file)\n    patch = do ->\n        let mergePatch = import './mergePatch'\n        let patchFunction = (object, patch, schema) -> mergePatch.merge(object, patch, null, schema)\n        for key, value of mergePatch\n            patchFunction[key] = value\n        return patchFunction\n    create = (type, args) -> variableArgConstructs[args.length](type, args)\n    setImmediate = (callback) ->\n        if global.setImmediate?\n            let id = global.setImmediate(callback)\n            return -> global.clearImmediate(id)\n        else\n            let id = setTimeout(callback, 50)\n            return -> clearTimeout(id)\n    requestAnimationFrame = (callback) ->\n        if global.requestAnimationFrame?\n            return global.requestAnimationFrame(callback)\n        else if global?.nextTick?\n            global.process.nextTick(callback)\n        else\n            setImmediate(callback)\n    throttleAnimation = (callback) ->\n        # ensures that a callback is not called any more often than an animation frame is available.\n        let awaitingCallbackArgs = null\n        let animationFrameCallback = ->\n            callback.apply(null, awaitingCallbackArgs)\n            awaitingCallbackArgs = null\n        return ->\n            if not awaitingCallbackArgs?\n                requestAnimationFrame(animationFrameCallback)\n            awaitingCallbackArgs = Array.prototype.slice.call(arguments, 0)\n    template = (fn, template) ->\n        fn.template = template ? true\n        return fn\n    createRuntime = (ast, args, parent) ->\n        const Context = import './runtime/Context'\n        const context = new Context(parent)\n        if args?\n            for name, value of args\n                context.setVariableLiteral(name, value)\n        return context.createRuntime(ast)\n    clone = (object, _deep = false) ->\n        if Array.isArray(object)\n            return [_deep ? clone(item, _deep) : item for item in object]\n        else if object?.constructor is Object\n            return {}\n                for key, value of object\n                    [key]: _deep ? clone(value, _deep) : value\n        else\n            return object\n    # observers = []\n    observe = (object, observer, options) ->\n        # let original = observer\n        if object is global or object is console or isValueType(object)\n            return noop\n        let property = options?.property\n        let removed = false\n        # property is optional\n        let observable = isObjectObservable(object)\n\n        if not observable\n            if not property?\n                return noop\n            observeShim.observe(object, observer, property)\n            # console.log('observe shim ' + JSON.stringify(object))\n        else if object? and observer? and typeof object is 'object'\n            observeShim.observe(object, observer)\n            # console.log('observe ' + JSON.stringify(object))\n            # watch change on dom elements\n            object.addEventListener?('change', observer)\n        object?.onObserved?(observer, property)\n        # return a function that can be used to unboserve\n        observe.count = (observe.count ? 0) + 1\n        # observers.push(original)\n        return ->\n            # observers.remove(original)\n            if not removed\n                # console.log('removing')\n                observe.count--\n                removed = true\n                if not observable\n                    observeShim.unobserve(object, observer, property)\n                    # console.log('unobserve shim ' + JSON.stringify(object))\n                else if object? and observer? and Object.unobserve? and typeof object is 'object'\n                    Object.unobserve(object, observer)\n                    # console.log('unobserve ' + JSON.stringify(object))\n                    # unwatch change on dom elements\n                    object.removeEventListener?('change', observer)\n                object?.unObserved?(observer, property)\n            else\n                # debugger\n                console.warn(\"unobserve should not be called multiple times!\")\n    checkForChanges = observeShim.checkForChanges\n    sync = observeShim.checkForChanges\n    changed = do ->\n        # let throttledCheck = throttleAnimation(checkForChanges)\n        return (object) ->\n            observeShim.changed(object)\n            # throttledCheck()\n    nextCheck = (callback) ->\n        observeShim.nextCheck(callback)\n    bind = (fn, thisArg) ->\n        let newFn = fn.bind(thisArg)\n        # the function name has semantic meaning for us when adding a function to an element\n        # (see add function below)\n        # so we copy the function name to the new bound function id property when binding\n        # (function.name is readonly)\n        if fn.name?.length > 0\n            newFn.id = fn.id ? fn.name\n        return newFn\n    add = (container, item) ->\n        let originalItem = item\n        let remove\n        if typeof item is 'function' and (item.name?.length > 0 or item.id?) and typeof container.addEventListener is 'function'\n            let name = item.id ? item.name\n            let capture = false\n            let captureSuffix = '_capture'\n            if name.endsWith(captureSuffix)\n                capture = true\n                name = name.substring(0, name.length - captureSuffix.length)\n            if item.toString().indexOf('sync') < 0\n                # we wrap all event handlers and call sync after, UNLESS they call it themselves.\n                item = ->\n                    originalItem.apply(@, arguments)\n                    sync()\n            container.addEventListener(name, item, capture)\n            remove = ->\n                container.removeEventListener(name, item)\n        else\n            if container.nodeType is 1\n                if typeof item isnt 'string' and not item?.nodeType?\n                    item = JSON.stringify(item)\n                if typeof item is 'string'\n                    item = document.createTextNode(item)\n                container.appendChild(item)\n            else if container.push?\n                container.push(item)\n            else\n                container.add(item)\n            remove = ->\n                if item?.removeSelf?\n                    item.removeSelf()\n                else if item?.parentNode?\n                    item.parentNode.removeChild(item)\n                else if container.lastIndexOf? and container.removeAt?\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.removeAt(index)\n                else if typeof container.remove is 'function'\n                    container.remove(item)\n                else if Array.isArray(container)\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.splice(index, 1)\n\n        item?.onAdded?(container)\n        # returns a function which can be used to remove the item\n        return ->\n            remove()\n            item?.onRemoved?(container)\n    defineProperties = (object, properties) -> Object.defineProperties(object, normalizeProperties(properties))\n    defineClass = (...definitions) ->\n        const classDefinition = definitions[0]\n        if definitions[1] is undefined\n            # extend our base object by default unless user sets extends to null explicitly.\n            definitions[1] = import './Object'\n        classDefinition.super = definitions[1]\n        const name = classDefinition.name ? classDefinition.id?.match(/([a-z_0-9\\$]+)(\\.js)?$/i)?[1]\n        if not name?\n            throw new Error('missing name property')\n        let classFunction\n        if classDefinition.hasOwnProperty('constructor')\n            classFunction = classDefinition.constructor\n        else if classDefinition.super?\n            classFunction = eval(\"(function {{name}}() { {{name}}.super.apply(this, arguments); })\")\n        else\n            classFunction = eval(\"(function {{name}}() {})\")\n\n        # successively merge patch the definitions onto the new class\n        let canSetClassProperty = (key) ->\n            if key is 'name'\n                return false\n            let descriptor = Object.getOwnPropertyDescriptor(classFunction, key)\n            return not descriptor? or descriptor.writable or not descriptor.get?\n\n        let types = new Set()   # a map of all types\n        types.add(classFunction)\n        for let i = definitions.length - 1; i >= 0; i--\n            let definition = definitions[i]\n            if definition?\n                types.add(definition)\n                for key, value of definition if key isnt 'test' or i is 0\n                    if canSetClassProperty(key)\n                        classFunction[key] = patch(classFunction[key], value)\n                        \n        classFunction.types = types\n\n        if classFunction.properties?\n            defineProperties(classFunction.prototype, classFunction.properties)\n\n        return classFunction\n    is = (instance, type) ->\n        if not instance?\n            return false\n        if not type?\n            return true\n        if typeof type is 'function'\n            if typeof instance.is is 'function'\n                return instance.is(type)\n            return instance instanceof type\n        else\n            return instance is type\n    makeReactive = (object, activate) ->\n        let observeCount = 0\n        let deactivate = null\n        return Object.defineProperties(\n            object\n            {}\n                onObserved:\n                    value: ->\n                        observeCount++\n                        if observeCount is 1\n                            deactivate = activate.call(object)\n                unObserved:\n                    value: ->\n                        observeCount--\n                        if observeCount is 0\n                            deactivate?()\n        )\n    serialize = (object) -> JSON.stringify(object)\n    deserialize = do ->\n        let extractType = (object, namespace) ->\n            if not object?\n                return null\n            let typeKey = import('./Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if not typeName?\n                return null\n            typeName = typeName.split(/\\//g).pop() # legacy/name/correction, only use last step\n            let type = namespace[typeName]\n            if not type.serializable\n                throw new Error(\"Type is not serializable: {{ typeName }}\")\n            return type\n        let convertType = (object, namespace) ->\n            let type = extractType(object, namespace)\n            if type?\n                object = new type(object)\n            # convert recursively\n            for key, value of object\n                if value?.constructor is Object\n                    object[key] = convertType(value, namespace)\n            return object\n        let deserialize = (object, namespace) ->\n            if typeof object is 'string'\n                object = JSON.parse(object)\n\n            return convertType(object, namespace)\n        deserialize.extractType = extractType\n        deserialize.convertType = convertType\n        return deserialize\n    test =\n        defineClass: ->\n            const Foo = defineClass(\n                {}\n                    id: \"Foo\"\n                    constructor: (number) ->\n                        @number = number\n                    properties:\n                        getValue: -> @number\n            )\n            assert new Foo(2).getValue() is 2\n        defineProperties:\n            \"should allow primitive values\": ->\n                const object = {}\n                const result = defineProperties(\n                    object\n                    {}\n                        f: -> \"function\"\n                        i: 2\n                        b: true\n                        a: []\n                        s: \"hello\"\n                )\n                assert object is result\n                assert typeof object.f is 'function'\n                assert object.f() is 'function'\n                assert object.i is 2\n                assert object.b is true\n                assert Array.isArray(object.a)\n                assert object.s is 'hello'\n\nfor name in [\"runtime\", \"compiler\", \"builder\", \"browser\"]\n    do (name) ->\n        Object.defineProperty(exports, name, {enumerable: true, get: -> require(\"./\" + name)})\n\n# if window, then on resize, check for changes\nif global.window?\n    global.window.addEventListener('resize', sync)"]}