{"version":3,"sources":["index.ion"],"names":["ion","noop",{"type":"Identifier","name":"noop","loc":{"start":{"line":2,"column":6,"fixed":true,"source":"ion/index.ion"},"end":{"line":2,"column":10,"fixed":true,"source":"ion/index.ion"}}},"global","DEBUG","valueTypes","string","number","boolean","isValueType","object","primitive","function","isPrimitive","normalizeProperty","property","name","writable","value","Array","isArray","get","set","hasOwnProperty","normalizeProperties","properties","variableArgConstructs","type","a","nodeObserveShim","Object","observe","checkForChanges","createShim","isObjectObservable","Node","NodeList","Location","runFile","file","require","patch","mergePatch","patchFunction","merge","key","create","args","length","nextTick","callback","process","setImmediate","fn","setTimeout","template","createRuntime","ast","parent","Context","context","setVariableLiteral","clone","_deep","item","constructor","observer","options","console","removed","observable","initial","changes","error","addEventListener","onObserved","count","unobserve","removeEventListener","unObserved","warn","bind","thisArg","newFn","id","add","container","remove","capture","captureSuffix","endsWith","substring","originalItem","apply","arguments","requestAnimationFrame","nodeType","JSON","stringify","document","createTextNode","appendChild","push","removeSelf","parentNode","removeChild","lastIndexOf","removeAt","index","splice","onAdded","onRemoved","defineProperties","defineClass","definitions","classDefinition","super","match","Error","classFunction","eval","canSetClassProperty","descriptor","getOwnPropertyDescriptor","types","Set","i","definition","prototype","is","instance","makeReactive","activate","observeCount","deactivate","call","serialize","deserialize","extractType","typeKey","typeName","serializable","convertType","typedObject","parse","test","Foo","getValue","result","f","b","s","defineProperty","exports","enumerable","window"],"mappings":"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","sourcesContent":["const ion = null # shouldn't depend on itself\nconst noop = ->\n\nimport './es6'\n\n# with this set to false we will miss any errors in Object.observe callbacks.\nglobal.DEBUG ?= true\n\nconst\n    valueTypes = {string:true,number:true,boolean:true}\n    isValueType = (object) -> not object? or valueTypes[typeof object] ? false\n    primitive = {string:true,number:true,boolean:true,function:true}\n    isPrimitive = (object) -> not object? or primitive[typeof object] or false\n    normalizeProperty = (property, name) ->\n        if typeof property is 'function'\n            property =\n                writable: false\n                value: property\n        else if isPrimitive(property) or Array.isArray(property)\n            property =\n                value: property\n\n        if not property.get? and not property.set? and not property.hasOwnProperty('value')\n            property.value = undefined\n\n        if property.hasOwnProperty('value')\n            property.writable ?= true\n\n        property.name = name\n\n        return property\n    normalizeProperties = (properties = {}) ->\n        for name, property of properties\n            properties[name] = normalizeProperty(property, name)\n        return properties\n    variableArgConstructs = []\n        (type, a) -> new type()\n        (type, a) -> new type(a[0])\n        (type, a) -> new type(a[0], a[1])\n        (type, a) -> new type(a[0], a[1], a[2])\n        (type, a) -> new type(a[0], a[1], a[2], a[3])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9])\n    nodeObserveShim = Object.observe?.checkForChanges ? Object : import('./es6/Object.observe').createShim()\n    isObjectObservable = do ->\n        let Node = global.Node ? ->\n        let NodeList = global.NodeList ? ->\n        let Location = global.Location ? ->\n        return (a) ->\n            if a instanceof Node or a instanceof NodeList or a instanceof Location\n                return false\n            return true\n\nexport const\n    runFile = (file) -> require('./builder').runFile(file)\n    patch = do ->\n        let mergePatch = import './mergePatch'\n        let patchFunction = (object, patch) -> mergePatch.merge(object, patch)\n        for key, value of mergePatch\n            patchFunction[key] = value\n        return patchFunction\n    create = (type, args) -> variableArgConstructs[args.length](type, args)\n    nextTick = (callback) ->\n        if global.process?.nextTick?\n            global.process.nextTick(callback)\n        else\n            setImmediate(callback)\n    setImmediate = do ->\n        if global.setImmediate?\n            return global.setImmediate\n        # if global.nextTick?\n        #     return global.nextTick\n        return (fn) ->\n            setTimeout(fn, 0)\n    template = (fn, template) ->\n        fn.template = template ? true\n        return fn\n    createRuntime = (ast, args, parent) ->\n        const Context = import './runtime/Context'\n        const context = new Context(parent)\n        if args?\n            for name, value of args\n                context.setVariableLiteral(name, value)\n        return context.createRuntime(ast)\n    clone = (object, _deep = false) ->\n        if Array.isArray(object)\n            return [_deep ? clone(item, _deep) : item for item in object]\n        else if object?.constructor is Object\n            return {}\n                for key, value of object\n                    [key]: _deep ? clone(value, _deep) : value\n        else\n            return object\n    # observers = []\n    observe = (object, observer, options) ->\n        # let original = observer\n        if object is global or object is console or isValueType(object)\n            return noop\n        let property = options?.property\n        let removed = false\n        # property is optional\n        let observable = isObjectObservable(object)\n        if not observable\n            if not property?\n                return noop\n            nodeObserveShim.observe(object, observer, property)\n            # console.log('observe shim ' + JSON.stringify(object))\n        else if object? and observer? and Object.observe? and typeof object is 'object'\n            if DEBUG\n                let initial = observer\n                # NEVER, EVER REMOVE THIS WRAPPER UNLESS YOU WANT HIDDEN ERRORS TO MAKE YOUR LIFE HELL\n                observer = (changes) ->\n                    try\n                        initial(changes)\n                    catch error\n                        console.error('Exception in Object.observe callback', error)\n            Object.observe(object, observer)\n            # console.log('observe ' + JSON.stringify(object))\n            # watch change on dom elements\n            object.addEventListener?('change', observer)\n        object?.onObserved?(observer, property)\n        # return a function that can be used to unboserve\n        observe.count = (observe.count ? 0) + 1\n        # observers.push(original)\n        return ->\n            # observers.remove(original)\n            if not removed\n                # console.log('removing')\n                observe.count--\n                removed = true\n                if not observable\n                    nodeObserveShim.unobserve(object, observer, property)\n                    # console.log('unobserve shim ' + JSON.stringify(object))\n                else if object? and observer? and Object.unobserve? and typeof object is 'object'\n                    Object.unobserve(object, observer)\n                    # console.log('unobserve ' + JSON.stringify(object))\n                    # unwatch change on dom elements\n                    object.removeEventListener?('change', observer)\n                object?.unObserved?(observer, property)\n            else\n                # debugger\n                console.warn(\"unobserve should not be called multiple times!\")\n    checkForChanges = ->\n        if Object.observe.checkForChanges?\n            Object.observe.checkForChanges()\n        else\n            nodeObserveShim.observe.checkForChanges()\n    bind = (fn, thisArg) ->\n        let newFn = fn.bind(thisArg)\n        # the function name has semantic meaning for us when adding a function to an element\n        # (see add function below)\n        # so we copy the function name to the new bound function id property when binding\n        # (function.name is readonly)\n        if fn.name?.length > 0\n            newFn.id = fn.id ? fn.name\n        return newFn\n    add = (container, item) ->\n        let remove\n        if typeof item is 'function' and (item.name?.length > 0 or item.id?) and typeof container.addEventListener is 'function'\n            let name = item.id ? item.name\n            let capture = false\n            let captureSuffix = '_capture'\n            if name.endsWith(captureSuffix)\n                capture = true\n                name = name.substring(0, name.length - captureSuffix.length)\n            # we wrap all event handlers and call checkForChanges after\n            let originalItem = item\n            item = ->\n                originalItem.apply(@, arguments)\n                # checkForChanges()\n                requestAnimationFrame(checkForChanges)\n            container.addEventListener(name, item, capture)\n            remove = ->\n                container.removeEventListener(name, item)\n        else\n            if container.nodeType is 1\n                if typeof item isnt 'string' and not item?.nodeType?\n                    item = JSON.stringify(item)\n                if typeof item is 'string'\n                    item = document.createTextNode(item)\n                container.appendChild(item)\n            else if container.push?\n                container.push(item)\n            else\n                container.add(item)\n            remove = ->\n                if item?.removeSelf?\n                    item.removeSelf()\n                else if item?.parentNode?\n                    item.parentNode.removeChild(item)\n                else if container.lastIndexOf? and container.removeAt?\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.removeAt(index)\n                else if typeof container.remove is 'function'\n                    container.remove(item)\n                else if Array.isArray(container)\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.splice(index, 1)\n\n        item?.onAdded?(container)\n        # returns a function which can be used to remove the item\n        return ->\n            remove()\n            item?.onRemoved?(container)\n    defineProperties = (object, properties) -> Object.defineProperties(object, normalizeProperties(properties))\n    defineClass = (...definitions) ->\n        const classDefinition = definitions[0]\n        if definitions[1] is undefined\n            # extend our base object by default unless user sets extends to null explicitly.\n            definitions[1] = import './Object'\n        classDefinition.super = definitions[1]\n        const name = classDefinition.name ? classDefinition.id?.match(/([a-z_0-9\\$]+)(\\.js)?$/i)?[1]\n        if not name?\n            throw new Error('missing name property')\n        let classFunction\n        if classDefinition.hasOwnProperty('constructor')\n            classFunction = classDefinition.constructor\n        else if classDefinition.super?\n            classFunction = eval(\"(function {{name}}() { {{name}}.super.apply(this, arguments); })\")\n        else\n            classFunction = eval(\"(function {{name}}() {})\")\n\n        # successively merge patch the definitions onto the new class\n        let canSetClassProperty = (key) ->\n            if key is 'name'\n                return false\n            let descriptor = Object.getOwnPropertyDescriptor(classFunction, key)\n            return not descriptor? or descriptor.writable or not descriptor.get?\n\n        let types = new Set()   # a map of all types\n        types.add(classFunction)\n        for let i = definitions.length - 1; i >= 0; i--\n            let definition = definitions[i]\n            if definition?\n                types.add(definition)\n                for key, value of definition if key isnt 'test' or i is 0\n                    if canSetClassProperty(key)\n                        classFunction[key] = patch(classFunction[key], value)\n                        \n        classFunction.types = types\n\n        if classFunction.properties?\n            defineProperties(classFunction.prototype, classFunction.properties)\n\n        return classFunction\n    is = (instance, type) ->\n        if not instance?\n            return false\n        if not type?\n            return true\n        if typeof type is 'function'\n            if typeof instance.is is 'function'\n                return instance.is(type)\n            return instance instanceof type\n        else\n            return instance is type\n    makeReactive = (object, activate) ->\n        let observeCount = 0\n        let deactivate = null\n        return Object.defineProperties(\n            object\n            {}\n                onObserved:\n                    value: ->\n                        observeCount++\n                        if observeCount is 1\n                            deactivate = activate.call(object)\n                unObserved:\n                    value: ->\n                        observeCount--\n                        if observeCount is 0\n                            deactivate?()\n        )\n    serialize = (object) -> JSON.stringify(object)\n    deserialize = do ->\n        let extractType = (object) ->\n            let typeKey = import('ion/Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if not typeName?\n                return Object\n            let type = import(typeName)\n            if not type.serializable\n                throw new Error(\"Type is not serializable: {{ typeName }}\")\n            # remove the type field from the source object\n            delete object[typeKey]\n            return type\n        let convertType = (object) ->\n            let typeKey = import('ion/Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if typeName?\n                let type = import(typeName)\n                if not type.serializable\n                    throw new Error(\"Type is not serializable: {{ typeName }}\")\n                let typedObject = new type\n                for key, value of object if key isnt typeKey\n                    typedObject[key] = value\n                object = typedObject\n            # convert recursively\n            for key, value of object\n                if value?.constructor is Object\n                    object[key] = convertType(value)\n            return object\n        let deserialize = (object) ->\n            if typeof object is 'string'\n                object = JSON.parse(object)\n\n            return convertType(object)\n        deserialize.extractType = extractType\n        deserialize.convertType = convertType\n        return deserialize\n    test =\n        defineClass: ->\n            const Foo = defineClass(\n                {}\n                    id: \"Foo\"\n                    constructor: (number) ->\n                        @number = number\n                    properties:\n                        getValue: -> @number\n            )\n            assert new Foo(2).getValue() is 2\n        defineProperties:\n            \"should allow primitive values\": ->\n                const object = {}\n                const result = defineProperties(\n                    object\n                    {}\n                        f: -> \"function\"\n                        i: 2\n                        b: true\n                        a: []\n                        s: \"hello\"\n                )\n                assert object is result\n                assert typeof object.f is 'function'\n                assert object.f() is 'function'\n                assert object.i is 2\n                assert object.b is true\n                assert Array.isArray(object.a)\n                assert object.s is 'hello'\n\nfor name in [\"runtime\", \"compiler\", \"builder\", \"browser\"]\n    do (name) ->\n        Object.defineProperty(exports, name, {enumerable: true, get: -> require(\"./\" + name)})\n\n# if window, then on resize, check for changes\nif global.window?\n    global.window.addEventListener('resize', checkForChanges)"]}