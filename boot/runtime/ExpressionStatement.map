{"version":3,"sources":["ExpressionStatement.ion"],"names":["ion","Statement","ExpressionStatement","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":7,"column":8,"fixed":true},"end":{"line":7,"column":16,"fixed":true}}},"runtimeExpression","context","createRuntime","expression","watch","runtimeExpressionWatcher","value","expressionValue","_remove","output","add","deactivate","unwatch"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,KAAP,CADV,EAEIC,SAAA,G,OAAY,CAAO,aAAP,CAFhB;IAIaC,mB;;QACTC,UAAA,EAAW;AAAA,YACPC,QAAA,EAAUC,YAClB;AAAA,gB,oCADQD,Q,uBACI,CAAZ;AAAA,gBACY,KAACE,iBAAD,QAACA,iB,WAAD,KAACA,iB,GAAqB,KAACC,OAAD,CAASC,aAAT,CAAuB,KAACC,UAAxB,CAAtB,CADZ;AAAA,gBAEa,KAACH,iBAAD,CAAmBI,KAApB,CACI,KAACC,wBAAD,QAACA,wB,WAAD,KAACA,wB,YAA4B,UAACC,KAAD,EAC7C;AAAA,oBAAoB,IAAG,KAACC,eAAD,KAAsBD,KAAzB,EACpB;AAAA,wBAAwB,KAACC,eAAD,GAAmBD,KAAnB,CAAxB;AAAA,wBACwB,KAACE,O,WAAD,KAACA,OAAD,E,SAAA,CADxB;AAAA,wBAEwB,KAACA,OAAD,GAAW,IAAX,CAFxB;AAAA,wBAGwB,IAAG,KAACP,OAAD,CAASQ,M,QAAT,IAAqBH,KAAA,KAAW,MAAnC,EACxB;AAAA,4BAA4B,KAACE,OAAD,GAAWd,GAAA,CAAIgB,GAAJ,CAAQ,KAACT,OAAD,CAASQ,MAAjB,EAAyBH,KAAzB,CAAX,CAA5B;AAAA,yBAJA;AAAA,qBADA;AAAA,iB,OAFY,EAFZ;AAAA,aAFe;AAAA,YAYPK,UAAA,EAAYZ,YACpB;AAAA,gB,oCADQY,U,uBACI,CAAZ;AAAA,gBACa,KAACX,iBAAD,CAAmBY,OAApB,CACI,KAACP,wBADL,EADZ;AAAA,aAbe;AAAA,S;OAD0BV,S,EAJzC;2BAIaC,mB","sourcesContent":["const\r\n    ion = import '../'\r\n    Statement = import './Statement'\r\n\r\nexport class ExpressionStatement extends Statement\r\n    properties:\r\n        activate: ->\r\n            super\r\n            @runtimeExpression ?= @context.createRuntime(@expression)\r\n            (@runtimeExpression.watch)\r\n                @runtimeExpressionWatcher ?= (value) =>\r\n                    if @expressionValue isnt value\r\n                        @expressionValue = value\r\n                        @_remove?()\r\n                        @_remove = null\r\n                        if @context.output? and value isnt undefined\r\n                            @_remove = ion.add(@context.output, value)\r\n        deactivate: ->\r\n            super\r\n            (@runtimeExpression.unwatch)\r\n                @runtimeExpressionWatcher\r\n"]}