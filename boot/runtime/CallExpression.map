{"version":3,"sources":["CallExpression.ion"],"names":["ion","DynamicExpression","ArrayExpression","CallExpression","properties","args","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":9,"column":8,"fixed":true},"end":{"line":9,"column":16,"fixed":true}}},"calleeExpression","context","createRuntime","callee","watch","calleeWatcher","value","calleeValue","thisArg","objectExpression","unobserve","thisarg","thisObserver","template","observe","changes","evaluate","argumentExpressions","type","elements","arguments","observeElements","argumentWatcher","argumentsValue","deactivate","unwatch","templateWatcher","apply","setValue","bind","create","e","console","error","stack","module","exports"],"mappings":"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","sourcesContent":["const\r\n    ion = import '../'\r\n    DynamicExpression = import './DynamicExpression'\r\n    ArrayExpression = import './ArrayExpression'\r\n\r\nmodule.exports = class CallExpression extends DynamicExpression\r\n    properties:\r\n        args: null\r\n        activate: ->\r\n            super\r\n            @calleeExpression ?= @context.createRuntime(@callee)\r\n            (@calleeExpression.watch)\r\n                @calleeWatcher ?= (value) =>\r\n                    @calleeValue = value\r\n                    # get thisArg and watch for changes\r\n                    let thisArg = @calleeExpression.objectExpression?.value\r\n                    if thisArg isnt @thisArg\r\n                        ion.unobserve(@thisarg, @thisObserver)\r\n                        @thisArg = thisArg\r\n                        if not @calleeValue?.template # we don't need to watch the thisArg if the callee is a template\r\n                            (ion.observe)\r\n                                thisArg\r\n                                @thisObserver ?= (changes) =>\r\n                                    @evaluate()\r\n                    @evaluate()\r\n            @argumentExpressions ?= @context.createRuntime({type:'ArrayExpression',elements:@arguments, observeElements:not @calleeValue?.template})\r\n            (@argumentExpressions.watch)\r\n                @argumentWatcher ?= (value) =>\r\n                    @argumentsValue = value\r\n                    @evaluate()\r\n        deactivate: ->\r\n            super\r\n            @calleeExpression.unwatch(@calleeWatcher)\r\n            @argumentExpressions.unwatch(@argumentWatcher)\r\n            if @template?\r\n                @template.unwatch(@templateWatcher)\r\n                @template.deactivate()\r\n                delete @template\r\n        evaluate: ->\r\n            let value = undefined\r\n            if @calleeValue? and @argumentsValue?\r\n                try\r\n                    if @calleeValue.template\r\n                        if @template?\r\n                            @template.unwatch(@templateWatcher)\r\n                        # always use new on templates\r\n                        @template = @calleeValue.template.apply(@thisArg, @argumentsValue)\r\n                        @template.activate()\r\n                        @template.watch(@templateWatcher ?= @setValue.bind(@))\r\n                    else\r\n                        if @type is 'NewExpression'\r\n                            # create a new with variable args\r\n                            value = ion.create(@calleeValue, @argumentsValue)\r\n                        else # @type is 'CallExpression'\r\n                            value = @calleeValue.apply(@thisArg, @argumentsValue)\r\n                        @setValue(value)\r\n                catch e\r\n                    # if we don't catch the errors, they might not be logged when occuring in an Object.observe callback\r\n                    console.error(e.stack ? e)\r\n"]}