{"version":3,"sources":["BlockStatement.ion"],"names":["ion","Statement","BlockStatement","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":7,"column":8,"fixed":true},"end":{"line":7,"column":16,"fixed":true}}},"statements","body","s","context","createRuntime","statement","deactivate","i","length"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,KAAP,CADV,EAEIC,SAAA,G,OAAY,CAAO,aAAP,CAFhB;IAIaC,c;;QACTC,UAAA,EAAW;AAAA,YACPC,QAAA,EAAUC,YAClB;AAAA,gB,+BADQD,Q,uBACI,CAAZ;AAAA,gBACY,IAAG,C,CAAI,KAACE,U,SAAR,EACZ;AAAA,oB,cAAA;AAAA,oB;oCAAkE,KAACC,I;;gCAANC,C;sCAA9B,KAACC,OAAD,CAASC,aAAT,CAAuBF,CAAvB,C;;qBAA/B;AAAA,oBAAgB,KAACF,UAAD,G,IAAA,CAAhB;AAAA,iBAFA;AAAA,gB;gCAG6B,KAACA,U;iEAC9B;AAAA,wB,IADgBK,S,cAChB;AAAA,wBAAgBA,SAAA,CAAUP,QAAV,GAAhB;AAAA,qB;iBAJA;AAAA,aAFe;AAAA,YAOPQ,UAAA,EAAYP,YACpB;AAAA,gB,+BADQO,U,uBACI,CAAZ;AAAA,gBAIY,KAAI,IAAIC,CAAA,GAAI,KAACP,UAAD,CAAYQ,MAAZ,GAAoB,CAA5B,CAAJ,CAAmCD,CAAA,IAAK,CAAxC,EAA2CA,CAAA,EAA3C,EACZ;AAAA,oBAAgB,IAAIF,SAAA,GAAY,KAACL,UAAD,CAAYO,CAAZ,CAAhB,CAAhB;AAAA,oBACgBF,SAAA,CAAUC,UAAV,GADhB;AAAA,iBALA;AAAA,aARe;AAAA,S;OADqBX,S,EAJpC;2BAIaC,c","sourcesContent":["const\r\n    ion = import '../'\r\n    Statement = import './Statement'\r\n\r\nexport class BlockStatement extends Statement\r\n    properties:\r\n        activate: ->\r\n            super\r\n            if not @statements?\r\n                @statements = [@context.createRuntime(s) for s in @body]\r\n            for statement in @statements\r\n                statement.activate()\r\n        deactivate: ->\r\n            super\r\n            # we deactivate in reverse order\r\n            # this makes removing items from an array more efficient\r\n            # and keeps our operations more symmetrical.\r\n            for let i = @statements.length -1; i >= 0; i--\r\n                let statement = @statements[i]\r\n                statement.deactivate()\r\n\r\n"]}