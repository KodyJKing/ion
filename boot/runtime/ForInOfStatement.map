{"version":3,"sources":["ForInOfStatement.ion"],"names":["ion","Statement","ForInOfStatement","properties","toKey",{"type":"Identifier","name":"toKey","loc":{"start":{"line":7,"column":8,"fixed":true},"end":{"line":7,"column":13,"fixed":true}}},"name","type","parseInt","forEach","collection","callback","key","length","value","activate","statements","collectionExpression","context","createRuntime","right","watch","collectionWatcher","removeItem","bind","unobserve","collectionObserver","addItem","observe","applyChanges","deactivate","unwatch","newContext","setVariable","left","declarations","id","statement","body","changes","ignoreProperty","oldValue","ignore","newValue"],"mappings":"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","sourcesContent":["const\r\n    ion = import '../'\r\n    Statement = import './Statement'\r\n\r\nexport class ForInOfStatement extends Statement\r\n    properties:\r\n        toKey: (name) ->\r\n            if @type is 'ForOfStatement'\r\n                return parseInt(name)\r\n            else\r\n                return name\r\n        forEach: (collection, callback) ->\r\n            if @type is 'ForOfStatement'\r\n                for let key = 0; key < collection.length; key++\r\n                    let value = collection[key]\r\n                    callback(key, value)\r\n            else\r\n                for key, value of collection\r\n                    callback(key, value)\r\n        activate: ->\r\n            super\r\n            @statements ?= {}\r\n            # we must create new contexts for every item in the list thingy.\r\n            @collectionExpression ?= @context.createRuntime(@right)\r\n            (@collectionExpression.watch)\r\n                @collectionWatcher ?= (collection) =>\r\n                    if @collection isnt collection\r\n                        if @collection?\r\n                            @forEach(@collection, @removeItem.bind(@))\r\n                            ion.unobserve(@collection, @collectionObserver)\r\n                        @collection = collection\r\n                        if @collection?\r\n                            @forEach(@collection, @addItem.bind(@))\r\n                            ion.observe(@collection, @collectionObserver ?= @applyChanges.bind(@))\r\n        deactivate: ->\r\n            super\r\n            @collectionExpression.unwatch(@collectionWatcher)\r\n        addItem: (key, value) ->\r\n            # console.log('add ' + key + ' ' + value)\r\n            if value isnt undefined\r\n                let newContext = @context.newContext()\r\n                newContext.setVariable(@left.declarations[@type is 'ForOfStatement' ? 0 : 1]?.id.name, value)\r\n                newContext.setVariable(@left.declarations[@type is 'ForOfStatement' ? 1 : 0]?.id.name, key)\r\n                let statement = @statements[key] = newContext.createRuntime(@body)\r\n                statement.activate()\r\n        removeItem: (key, value) ->\r\n            let statement = @statements[key]\r\n            # console.log('remove ' + key + ' ' + value + ' ', statement)\r\n            statement?.deactivate()\r\n            delete @statements[key]\r\n        applyChanges: (changes) ->\r\n            # console.log('changes', changes)\r\n            const ignoreProperty(name) ->\r\n                if not name?\r\n                    return true\r\n                if name[0] is '_'\r\n                    return true\r\n                if name is 'length' and @type is 'ForOfStatement'\r\n                    return true\r\n                return false\r\n            # this will be an N performance algorithm for ARRAY insertions/deletions.\r\n            # we can improve this later by looking for \"slice\" events and seeing if index is not relevant.\r\n            # console.log('changes', changes)\r\n            for {name,oldValue} in changes\r\n                let ignore = ignoreProperty(name)\r\n                if not ignore\r\n                    let newValue = @collection[name]\r\n                    let key = @toKey(name)\r\n                    if oldValue isnt undefined\r\n                        @removeItem(key, oldValue)\r\n                    if newValue isnt undefined\r\n                        @addItem(key, newValue)\r\n\r\n"]}