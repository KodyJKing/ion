{"version":3,"sources":["DynamicExpression.ion"],"names":["ion","DynamicExpression","properties","isActive","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":6,"column":8,"fixed":true},"end":{"line":6,"column":16,"fixed":true}}},"deactivate","watch","watcher","watchers","_watchers","length","push","value","getValue","_notifyWatcher","unwatch","splice","lastIndexOf","call","notify","setValue","test","d","total"],"mappings":"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","sourcesContent":["const ion = import '../'\r\n\r\nexport class DynamicExpression extends import './Expression'\r\n    properties:\r\n        isActive: false\r\n        activate: ->\r\n            # called when we have watchers\r\n            @isActive = true\r\n        deactivate: ->\r\n            # called when we no longer have watchers\r\n            @isActive = false\r\n        watch: (watcher) ->\r\n            let watchers = @_watchers ?= []\r\n            if watchers.length is 0\r\n                @activate()\r\n            watchers.push(watcher)\r\n            # notify watcher immediately if we have a defined value\r\n            let value = @getValue()\r\n            if value isnt undefined\r\n                @_notifyWatcher(watcher, value)\r\n        unwatch: (watcher) ->\r\n            @_watchers.splice(@_watchers.lastIndexOf(watcher), 1)\r\n            # notify watcher immediately if we have a defined value\r\n            let value = @getValue()\r\n            if value isnt undefined\r\n                @_notifyWatcher(watcher, undefined)\r\n            # this must happen AFTER we notify the watcher,\r\n            # otherwise it changes the value and the watcher may not be notified.\r\n            if @_watchers.length is 0\r\n                @deactivate()\r\n        _notifyWatcher: (watcher, value) -> watcher.call(@, value)\r\n        notify: ->\r\n            if @_watchers?\r\n                let value = @getValue()\r\n                for watcher in @_watchers\r\n                    @_notifyWatcher(watcher, value)\r\n            return\r\n        getValue: -> @value\r\n        setValue: (value) ->\r\n            if value isnt @value\r\n                @value = value\r\n                @notify()\r\n            return\r\n    test: ->\r\n        const d = new DynamicExpression()\r\n        if d.getValue() isnt undefined\r\n            throw \"d.getValue() != undefined\"\r\n        let total = 10\r\n        const watcher = (value) ->\r\n            if value isnt undefined\r\n                total += value\r\n        d.watch(watcher)\r\n        assert total is 10\r\n        d.setValue(10)\r\n        assert d.getValue() is 10\r\n        assert total is 20\r\n        d.setValue(20)\r\n        assert total is 40\r\n        d.unwatch(watcher)\r\n        assert total is 40\r\n        d.setValue(50)\r\n        assert total is 40\r\n"]}