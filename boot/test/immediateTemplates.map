{"version":3,"sources":["immediateTemplates.ion"],"names":["ion","templates","a","b","c","items","index","item","x","key","value","object","Math","min","call","Date","y","z","type","position","input","output","e","d","patch","test",{"type":"Identifier","name":"test","loc":{"start":{"line":131,"column":4,"fixed":true},"end":{"line":131,"column":8,"fixed":true}}},"templateType","args","expected","template","apply","activate","reactiveResult","watch","JSON","stringify","console","log","deactivate","imperativeResult"],"mappings":"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","sourcesContent":["const ion = import '../'\r\n\r\nconst templates = []\r\n    []\r\n        template ->\r\n            const\r\n                a = 1\r\n                b = 2\r\n                c = a + b\r\n            return c\r\n        []\r\n        3\r\n    []\r\n        template -> {a:1,b:2}\r\n        []\r\n        {a:1,b:2}\r\n    []\r\n        template ->\r\n            return []\r\n                1\r\n                2\r\n        []\r\n        [1,2]\r\n    []\r\n        template ->\r\n            let a = 1\r\n            let b = 2\r\n            return []\r\n                a\r\n                b\r\n                if a > b\r\n                    10\r\n                else if b > a\r\n                    20\r\n        []\r\n        [1,2,20]\r\n    []\r\n        template ->\r\n            let items = [1,2,3]\r\n            let x = [item + index for item, index in items]\r\n            return x\r\n        []\r\n        [1,3,5]\r\n    []\r\n        template ->\r\n            let items = {a:1,b:2,c:3}\r\n            let x = [key + value for key, value of items]\r\n            return x\r\n        []\r\n        ['a1', 'b2', 'c3']\r\n    []\r\n        template ->\r\n            let object = {a:{b:1}}\r\n            return object.a.b\r\n        []\r\n        1\r\n    []\r\n        template -> false ? 1 : 2\r\n        []\r\n        2\r\n    []\r\n        template -> null ? 2\r\n        []\r\n        2\r\n    []\r\n        template ->\r\n            let a = null\r\n            let b = 2\r\n            return [a?, b?]\r\n        []\r\n        [false,true]\r\n    []\r\n        template -> Math.min(1, 2)\r\n        []\r\n        1\r\n    []\r\n        template -> Math.min.call(null, 1, 2)\r\n        []\r\n        1\r\n    []\r\n        template -> new Date(2011, 10, 5)\r\n        []\r\n        new Date(2011, 10, 5)\r\n    []\r\n        template -> /foo/\r\n        []\r\n        /foo/\r\n    []\r\n        template ->\r\n            return\r\n                x: 1\r\n                y: 2\r\n                z: []\r\n                    let items = [3,2,1]\r\n                    for item in items\r\n                        item * 2\r\n        []\r\n        {x:1, y:2, z:[6,4,2]}\r\n    []\r\n        template -> [null ? 1, undefined ? 2]\r\n        []\r\n        [1, 2]\r\n    []\r\n        template ({a,b}) -> a + b\r\n        [{a:1,b:2}]\r\n        3\r\n    []\r\n        template (type) ->\r\n            return new type\r\n                position:\r\n                    x: 10\r\n        []\r\n            ->\r\n                @position = {x:1,y:2}\r\n        {position:{x:10,y:2}}\r\n    []\r\n        template (input, output) ->\r\n            output:\r\n                e: input.a + input.b\r\n            return output\r\n        []\r\n            {a:1,b:2}\r\n            {c:3,d:4}\r\n        {c:3,d:4,e:3}\r\n    []\r\n        template -> ion.patch\r\n        []\r\n        ion.patch\r\n\r\nexport const\r\n    test = ->\r\n        for [templateType, args, expected] in templates if expected?\r\n            let template = templateType.template.apply(this, args)\r\n            template.activate()\r\n            let reactiveResult = null\r\n            (template.watch)\r\n                (value) -> reactiveResult = value\r\n            try\r\n                assert reactiveResult is expected or JSON.stringify(reactiveResult) is JSON.stringify(expected)\r\n            catch e\r\n                console.log(reactiveResult, \"!==\", expected)\r\n                throw e\r\n\r\n            template.deactivate()\r\n            assert reactiveResult is undefined\r\n            # also, call the template function imperatively and see that it's still the expected value\r\n            let imperativeResult = templateType.apply(null, args)\r\n            # console.log('imperativeResult: ', imperativeResult)\r\n            assert JSON.stringify(imperativeResult) is JSON.stringify(expected)\r\n\r\n"]}