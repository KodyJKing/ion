{"version":3,"sources":["immediateTemplates.ion"],"names":["ion","templates","a","b","Date","x","y","z","position","c","d","e","patch","test",{"type":"Identifier","name":"test","loc":{"start":{"line":131,"column":4,"fixed":true},"end":{"line":131,"column":8,"fixed":true}}},"templateType","args","expected","template","apply","reactiveResult","watcher","value","watch","JSON","stringify","console","log","unwatch"],"mappings":"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","sourcesContent":["const ion = import '../'\r\n\r\nconst templates = []\r\n    []\r\n        template ->\r\n            const\r\n                a = 1\r\n                b = 2\r\n                c = a + b\r\n            return c\r\n        []\r\n        3\r\n    []\r\n        template -> {a:1,b:2}\r\n        []\r\n        {a:1,b:2}\r\n    []\r\n        template ->\r\n            return []\r\n                1\r\n                2\r\n        []\r\n        [1,2]\r\n    []\r\n        template ->\r\n            let a = 1\r\n            let b = 2\r\n            return []\r\n                a\r\n                b\r\n                if a > b\r\n                    10\r\n                else if b > a\r\n                    20\r\n        []\r\n        [1,2,20]\r\n    []\r\n        template ->\r\n            let items = [1,2,3]\r\n            let x = [item + index for item, index in items]\r\n            return x\r\n        []\r\n        [1,3,5]\r\n    []\r\n        template ->\r\n            let items = {a:1,b:2,c:3}\r\n            let x = [key + value for key, value of items]\r\n            return x\r\n        []\r\n        ['a1', 'b2', 'c3']\r\n    []\r\n        template ->\r\n            let object = {a:{b:1}}\r\n            return object.a.b\r\n        []\r\n        1\r\n    []\r\n        template -> false ? 1 : 2\r\n        []\r\n        2\r\n    []\r\n        template -> null ? 2\r\n        []\r\n        2\r\n    []\r\n        template ->\r\n            let a = null\r\n            let b = 2\r\n            return [a?, b?]\r\n        []\r\n        [false,true]\r\n    []\r\n        template -> Math.min(1, 2)\r\n        []\r\n        1\r\n    []\r\n        template -> Math.min.call(null, 1, 2)\r\n        []\r\n        1\r\n    []\r\n        template -> new Date(2011, 10, 5)\r\n        []\r\n        new Date(2011, 10, 5)\r\n    []\r\n        template -> /foo/\r\n        []\r\n        /foo/\r\n    []\r\n        template ->\r\n            return\r\n                x: 1\r\n                y: 2\r\n                z: []\r\n                    let items = [3,2,1]\r\n                    for item in items\r\n                        item * 2\r\n        []\r\n        {x:1, y:2, z:[6,4,2]}\r\n    []\r\n        template -> [null ? 1, undefined ? 2]\r\n        []\r\n        [1, 2]\r\n    []\r\n        template ({a,b}) -> a + b\r\n        [{a:1,b:2}]\r\n        3\r\n    []\r\n        template (type) ->\r\n            return new type\r\n                position:\r\n                    x: 10\r\n        []\r\n            ->\r\n                @position = {x:1,y:2}\r\n        {position:{x:10,y:2}}\r\n    []\r\n        template (input, output) ->\r\n            output:\r\n                e: input.a + input.b\r\n            return output\r\n        []\r\n            {a:1,b:2}\r\n            {c:3,d:4}\r\n        {c:3,d:4,e:3}\r\n    []\r\n        template -> ion.patch\r\n        []\r\n        ion.patch\r\n\r\nexport const\r\n    test = ->\r\n        for [templateType, args, expected] in templates if expected?\r\n            let template = templateType.apply(this, args)\r\n            let reactiveResult = null\r\n            let watcher = (value) -> reactiveResult = value\r\n            template.watch(watcher)\r\n            try\r\n                assert reactiveResult is expected or JSON.stringify(reactiveResult) is JSON.stringify(expected)\r\n            catch e\r\n                console.log(reactiveResult, \"!==\", expected)\r\n                throw e\r\n\r\n            template.unwatch(watcher)\r\n            assert reactiveResult is undefined\r\n            # # also, call the template function imperatively and see that it's still the expected value\r\n            # let imperativeResult = templateType.apply(null, args)\r\n            # # console.log('imperativeResult: ', imperativeResult)\r\n            # assert JSON.stringify(imperativeResult) is JSON.stringify(expected)\r\n\r\n"]}