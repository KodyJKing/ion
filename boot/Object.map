{"version":3,"sources":["Object.ion"],"names":["ion","Object","constructor","properties","key","value","typeKey","is",{"type":"Identifier","name":"is","loc":{"start":{"line":10,"column":4,"fixed":true},"end":{"line":10,"column":6,"fixed":true}}},"object","types","has","toJSON","id","hasOwnProperty","test"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,IAAP,CADV;IAGaC,M;;QACTC,WAAA,EAAa,SADJD,MACI,CAACE,UAAD,EACjB;AAAA,YAAQ,IAAGA,U,QAAH,EACR;AAAA,gBAAY,SAAIC,GAAJ,IAAkBD,UAAlB,EACZ;AAAA,oB,IADqBE,K,GAASF,U,CAAdC,G,EAChB;AAAA,oBAAgB,KAAEA,GAAF,IAASC,KAAT,CAAhB;AAAA,iBADA;AAAA,aADA;AAAA,S;QAGIC,OAAA,EAAS,G;QACTC,EAAA,EAAIC,UAACC,MAADD,E;mBAAYC,M,WAAAA,MAAA,CAAQP,WAAR,CAAoBQ,K,WAApBD,MAAA,CAAQP,WAAR,CAAoBQ,KAApB,CAA2BC,G,WAA3BF,MAAA,CAAQP,WAAR,CAAoBQ,KAApB,CAA2BC,GAA3B,CAAgC,IAAhC,C;;QAChBR,UAAA,EAAW;AAAA,YACPS,MAAA,EAAQJ,YAChB;AAAA,gBAAY,IAAML,UAAA,GAAa,EAAnB,CAAZ;AAAA,gBACY,IAAG,K,WAAA,CAAEU,E,QAAL,EACZ;AAAA,oBAAgBV,UAAA,CAAW,K,WAAA,CAAEG,OAAb,IAAwB,K,WAAA,CAAEO,EAA1B,CAAhB;AAAA,iBAFA;AAAA,gB;+BAG8B,I;oBAAlB,SAAIT,GAAJ,I,IAAA,E;4BAASC,K,QAALD,G;4BAAmB,KAACU,cAAD,CAAgBV,GAAhB,C,EACnC;AAAA,4BAAgBD,UAAA,CAAWC,GAAX,IAAkBC,KAAlB,CAAhB;AAAA,yB;;iBAJA;AAAA,gBAKY,OAAOF,UAAP,CALZ;AAAA,aAFe;AAAA,S;QAQXY,IAAA,EAAMP,YACV;AAAA,YAAQ,IAAIC,MAAA,GAAS,IAAIR,MAAJ,EAAb,CAAR;AAAA,Y,KACeA,MAAA,CAAOM,EAAP,CAAUE,MAAV,C;yEADf;AAAA,S;OAhB4B,I,EAH5B;2BAGaR,M","sourcesContent":["const\r\n    ion = import './'\r\n\r\nexport class Object extends null\r\n    constructor: (properties) ->\r\n        if properties?\r\n            for key, value of properties\r\n                @[key] = value\r\n    typeKey: '$'\r\n    is: (object) -> object?.constructor.types?.has?(@)\r\n    properties:\r\n        toJSON: ->\r\n            const properties = {}\r\n            if @@id?\r\n                properties[@@typeKey] = @@id\r\n            for key, value of @ if @hasOwnProperty(key)\r\n                properties[key] = value\r\n            return properties\r\n    test: ->\r\n        let object = new Object()\r\n        assert Object.is(object)\r\n"]}