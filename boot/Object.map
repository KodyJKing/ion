{"version":3,"sources":["Object.ion"],"names":["ion","typeKey","type","toJSON",{"type":"Identifier","name":"toJSON","loc":{"start":{"line":15,"column":8,"fixed":true},"end":{"line":15,"column":14,"fixed":true}}},"properties","id","key","value","hasOwnProperty","Object","constructor","is","object","types","has","test"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,IAAP,CADV;AAGA,IAAMC,OAAA,GAAU,GAAhB,CAHA;eAAA;;UAYSA,O,oBAAAA,O,GAAS,EACNC,IAAA,EAAM,QADA,E;UAEVC,M,GAAQC,YAChB;AAAA,QAAY,IAAMC,UAAA,GAAa,EAAnB,CAAZ;AAAA,QACY,IAAG,K,WAAA,CAAEC,E,QAAL,EACZ;AAAA,YAAgBD,UAAA,CAAW,K,WAAA,CAAEJ,OAAb,IAAwB,K,WAAA,CAAEK,EAA1B,CAAhB;AAAA,SAFA;AAAA,Q;uBAG8B,I;YAAlB,SAAIC,GAAJ,I,IAAA,E;oBAASC,K,QAALD,G;oBAAmB,KAACE,cAAD,CAAgBF,GAAhB,C,EACnC;AAAA,oBAAgBF,UAAA,CAAWE,GAAX,IAAkBC,KAAlB,CAAhB;AAAA,iB;;SAJA;AAAA,QAKY,OAAOH,UAAP,CALZ;AAAA,K;CAfA;IAIaK,M;;QACTC,WAAA,EAAa,SADJD,MACI,CAACL,UAAD,EACjB;AAAA,YAAQ,IAAGA,U,QAAH,EACR;AAAA,gBAAY,SAAIE,GAAJ,IAAkBF,UAAlB,EACZ;AAAA,oB,IADqBG,K,GAASH,U,CAAdE,G,EAChB;AAAA,oB,IADqBC,K,GAASH,U,CAAdE,G,EAChB;AAAA,oBAAgB,KAAEA,GAAF,IAASC,KAAT,CAAhB;AAAA,iBADA;AAAA,aADA;AAAA,S;QAGIP,OAAA,EAASA,O;QACTW,EAAA,EAAIR,UAACS,MAADT,E;mBAAYS,M,WAAAA,MAAA,CAAQF,WAAR,CAAoBG,K,WAApBD,MAAA,CAAQF,WAAR,CAAoBG,KAApB,CAA2BC,G,WAA3BF,MAAA,CAAQF,WAAR,CAAoBG,KAApB,CAA2BC,GAA3B,CAAgC,IAAhC,C;;QAChBV,UAAA,E;QAUAW,IAAA,EAAMZ,YACV;AAAA,YAAQ,IAAIS,MAAA,GAAS,IAAIH,MAAJ,EAAb,CAAR;AAAA,Y,KACeA,MAAA,CAAOE,EAAP,CAAUC,MAAV,C;yEADf;AAAA,S;OAlB4B,I,EAJ5B;2BAIaH,M","sourcesContent":["const\r\n    ion = import './'\r\n\r\nconst typeKey = '$'\r\nexport class Object extends null\r\n    constructor: (properties) ->\r\n        if properties?\r\n            for key, value of properties\r\n                @[key] = value\r\n    typeKey: typeKey\r\n    is: (object) -> object?.constructor.types?.has?(@)\r\n    properties:\r\n        [typeKey]:\r\n            type: 'string'\r\n        toJSON: ->\r\n            const properties = {}\r\n            if @@id?\r\n                properties[@@typeKey] = @@id\r\n            for key, value of @ if @hasOwnProperty(key)\r\n                properties[key] = value\r\n            return properties\r\n    test: ->\r\n        let object = new Object()\r\n        assert Object.is(object)\r\n"]}