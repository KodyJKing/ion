const ion = import '../'

export class DynamicExpression extends import './Expression'
    properties:
        isActive: false
        activate: ->
            # called when we have watchers
            @isActive = true
        deactivate: ->
            # called when we no longer have watchers
            @isActive = false
        watch: (watcher) ->
            let watchers = @_watchers ?= []
            if watchers.length is 0
                @activate()
            watchers.push(watcher)
            # notify watcher immediately if we have a defined value
            let value = @getValue()
            if value isnt undefined
                @_notifyWatcher(watcher, value)
        unwatch: (watcher) ->
            @_watchers.splice(@_watchers.lastIndexOf(watcher), 1)
            # notify watcher immediately if we have a defined value
            let value = @getValue()
            if value isnt undefined
                @_notifyWatcher(watcher, undefined)
            # this must happen AFTER we notify the watcher,
            # otherwise it changes the value and the watcher may not be notified.
            if @_watchers.length is 0
                @deactivate()
        _notifyWatcher: (watcher, value) -> watcher.call(@, value)
        notify: ->
            if @_watchers?
                let value = @getValue()
                for watcher in @_watchers
                    @_notifyWatcher(watcher, value)
            return
        getValue: -> @value
        setValue: (value) ->
            if value isnt @value
                @value = value
                @notify()
            return
    test: ->
        const d = new DynamicExpression()
        if d.getValue() isnt undefined
            throw "d.getValue() != undefined"
        let total = 10
        const watcher = (value) ->
            if value isnt undefined
                total += value
        d.watch(watcher)
        assert total is 10
        d.setValue(10)
        assert d.getValue() is 10
        assert total is 20
        d.setValue(20)
        assert total is 40
        d.unwatch(watcher)
        assert total is 40
        d.setValue(50)
        assert total is 40
