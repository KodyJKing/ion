const
    ion = import '../'
    Statement = import './Statement'

export class IfStatement extends Statement
    properties:
        activate: ->
            super
            @testExpression ?= @context.createRuntime(@test)
            (@testExpression.watch)
                @testExpressionWatcher ?= (value) =>
                    if value
                        if @alternateStatement?.isActive
                            @alternateStatement?.deactivate()
                        @consequentStatement ?= @context.createRuntime(@consequent)
                        @consequentStatement.activate()
                    else
                        if @consequentStatement?.isActive
                            @consequentStatement?.deactivate()
                        if @alternate?
                            @alternateStatement ?= @context.createRuntime(@alternate)
                            @alternateStatement.activate()
        deactivate: ->
            super
            (@testExpression.unwatch)
                @testExpressionWatcher
            if @alternateStatement?.isActive
                @alternateStatement?.deactivate()
            if @consequentStatement?.isActive
                @consequentStatement?.deactivate()
