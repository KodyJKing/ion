(function(){require.register('ion/reactive/Expression',function(module,exports,require){// Generated by CoffeeScript 1.6.3
(function() {
  var Expression, Operation,
    __hasProp = {}.hasOwnProperty;

  Operation = require('../Operation');

  module.exports = Expression = (function() {
    function Expression(properties) {
      var key, value;
      for (key in properties) {
        value = properties[key];
        this[key] = value;
      }
    }

    Expression.prototype.watch = function _watch(watcher) {
      throw new Error("not implemented");
    };

    Expression.prototype.unwatch = function _unwatch(watcher) {
      throw new Error("not implemented");
    };

    Expression.prototype.toJSON = function _toJSON() {
      var json, key, value;
      json = {
        "$": this.constructor.name
      };
      for (key in this) {
        if (!__hasProp.call(this, key)) continue;
        value = this[key];
        json[key] = value;
      }
      return json;
    };

    return Expression;

  })();

  Expression.createExpressions = function _createExpressions(context, args) {
    return args.map(function(arg) {
      return Expression.createExpression(context, arg);
    });
  };

  Expression.createExpression = function _createExpression(context, object) {
    var operation;
    if (object != null ? object.op : void 0) {
      operation = Operation.getOperation(object.op);
      return new (require('./OperationExpression'))({
        context: context,
        operation: operation,
        args: object.args
      });
    } else {
      return new (require('./StaticExpression'))({
        value: object
      });
    }
  };

}).call(this);

})})()