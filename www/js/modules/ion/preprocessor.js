(function(){require.register('ion/preprocessor',function(module,exports,require){// Generated by CoffeeScript 1.6.3
(function() {
  var core, expectedResult, getSpace, preprocess, sample;

  core = require('./core');

  getSpace = function _getSpace(size) {
    var i, result, _i;
    result = [];
    for (i = _i = 0; 0 <= size ? _i < size : _i > size; i = 0 <= size ? ++_i : --_i) {
      result.push(" ");
    }
    return result.join("");
  };

  exports.preprocess = preprocess = function _preprocess(source, lineMapping) {
    var indent, indentStack, index, inputLine, line, lines, outdent, output, totalIndent, writeLine, _i, _len;
    totalIndent = 0;
    indentStack = [];
    lines = core.splitLines(source);
    inputLine = 0;
    writeLine = function _writeLine(line) {
      output.push(line);
      return lineMapping != null ? lineMapping.push(inputLine) : void 0;
    };
    outdent = function _outdent() {
      indentStack.pop();
      totalIndent = indentStack[indentStack.length - 1];
      return writeLine(getSpace(totalIndent) + core.outdentToken);
    };
    output = [];
    for (index = _i = 0, _len = lines.length; _i < _len; index = ++_i) {
      line = lines[index];
      inputLine = index;
      indent = core.getIndent(line);
      if (indent > totalIndent) {
        writeLine(getSpace(totalIndent) + core.indentToken);
        totalIndent = indent;
        indentStack.push(indent);
      } else {
        while (indent < totalIndent) {
          outdent();
        }
      }
      writeLine(line);
    }
    while (totalIndent > 0) {
      outdent();
    }
    return core.joinLines(output);
  };

  sample = "Person\n    name: \"Alpha\"\n    age: 40\n    children:\n        Person\n            name: \"Beta\"\n            age: 1\n        Person\n            name: \"Charlie\"\n            age: 2\n            description: \"\"\n                    This is just a\n                sample indented multiline\n                string literal.";

  expectedResult = "Person\n{{{{\n    name: \"Alpha\"\n    age: 40\n    children:\n    {{{{\n        Person\n        {{{{\n            name: \"Beta\"\n            age: 1\n        }}}}\n        Person\n        {{{{\n            name: \"Charlie\"\n            age: 2\n            description: \"\"\n            {{{{\n                    This is just a\n            }}}}\n                sample indented multiline\n            {{{{\n                string literal.\n            }}}}\n        }}}}\n    }}}}\n}}}}";

  exports.test = function _test() {
    var lineMapping, result;
    lineMapping = [];
    result = preprocess(sample, lineMapping);
    if (result !== expectedResult) {
      console.log(JSON.stringify(result));
      console.log(JSON.stringify(expectedResult));
      throw new Error("Preprocessor result not expected result.");
    }
    if (JSON.stringify(lineMapping) !== "[0,1,1,2,3,4,4,5,5,6,7,7,8,8,9,10,11,11,12,12,13,13,13,13,13,13]") {
      throw new Error("Unexpected line mapping: " + JSON.stringify(lineMapping));
    }
  };

}).call(this);

})})()