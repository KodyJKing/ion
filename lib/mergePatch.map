{"version":3,"sources":["mergePatch.ion"],"names":["ion","isObject",{"type":"Identifier","name":"isObject","loc":{"start":{"line":3,"column":4,"fixed":true,"source":"ion/mergePatch.ion"},"end":{"line":3,"column":12,"fixed":true,"source":"ion/mergePatch.ion"}}},"a","type","deleteValue","isPrivate","name","watchImmediate","object","handler","Error","watch","count","watching","propertyWatchers","watchProperties","changes","properties","map","Object","keys","value","patch","unobserve","observe","hasOwnProperty","key","unwatch","canSetProperty","merge","target","values","options","deleteNull","constructor","factory","changed","newValue","combine","patch1","patch2","active","combinedPatch","finalCallback","delayedHandler","nextCheck","diff","oldValue","propertyDiff","isChange","Array","isArray","JSON","stringify","test","equal","b","c","d","double","x","f","e","done","source","age","children","Sadera","grandchildren","One","Two","Orion","Third","clone","three","checkForChanges"],"mappings":"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","sourcesContent":["const\n    ion = import './'\n    isObject = (a) ->\n        let type = typeof a\n        return a? and type is 'object' or type is 'function'\n    deleteValue = null\n    isPrivate = (name) -> name[0] is '_'\n    watchImmediate = (object, handler) ->\n        if not isObject(object)\n            throw new Error(\"Cannot watch: #{object}\")\n        watch.count = (watch.count ? 0) + 1\n        # watch.objects ?= []\n        # watch.objects.push(object)\n        let watching = true\n        let propertyWatchers = {}\n        let watchProperties = (changes) ->\n            let properties = changes?.map((a) -> a.name) ? Object.keys(object)\n            for name in properties\n                do (name) ->\n                    if watching\n                        propertyWatchers[name]?()\n                        let value = object[name]\n                        if isObject(value)\n                            propertyWatchers[name] = watch(\n                                value\n                                (patch) ->\n                                    # console.log('WATCH PROPERTIES ' + JSON.stringify({[name]:patch}))\n                                    handler({[name]:patch})\n                            )\n                        else\n                            delete propertyWatchers[name]\n\n        watchProperties(null)\n        let unobserve = ion.observe(\n            object\n            (changes) ->\n                if watching\n                    let patch = null\n                    for {name} in changes\n                        # we ignore names that start with underscore, they are considered private\n                        if not isPrivate(name)\n                            patch ?= {}\n                            # we convert undefined values from delete into explicit nulls\n                            patch[name] = object.hasOwnProperty(name) ? object[name] : deleteValue\n                    watchProperties(changes)\n                    if patch?\n                        # console.log('OBSERVE ' + JSON.stringify(patch))\n                        handler(patch)\n        )\n        return ->\n            watch.count--\n            # watch.objects.remove(object)\n            watching = false\n            unobserve()\n            unobserve = null\n            for key, unwatch of propertyWatchers\n                unwatch()\n            propertyWatchers = null\n\nexport const\n    canSetProperty = (object, key) -> not (typeof object is 'function' and key is 'name')\n    # options:\n    #   deleteNull: delete properties if value is null, default: true\n    #   factory: function to use when constructing new objects, defaults to using plain objects {}\n    merge = (target, values, options) ->\n        let deleteNull = options?.deleteNull ? true\n        if values?.constructor isnt Object\n            return values\n        if not isObject(target)\n            if options?.factory?\n                target = options.factory(values)\n            else\n                target = {}\n        for key, value of values\n            if deleteNull and value is deleteValue\n                delete target[key]\n                ion.changed(target)\n            else\n                let newValue = merge(target[key], value, options)\n                if newValue isnt target[key] and canSetProperty(target, key)\n                    target[key] = newValue\n                    # console.log('*****patch*********')\n                    ion.changed(target)\n        return target\n    # combines two patches to make a single patch\n    combine = (patch1, patch2) -> merge(patch1, patch2, {deleteNull:false})\n    # watches object for changes and calls the handler with patches\n    watch = (object, handler) ->\n        # this version delays callbacks in order to merge all simultaneous changes\n        # into a single patch object before calling the main handler\n        let active = false\n        let combinedPatch = undefined\n        let finalCallback = ->\n            handler(combinedPatch)\n            active = false\n            combinedPatch = undefined\n        let delayedHandler = (patch) ->\n            combinedPatch = combine(combinedPatch, patch)\n            if not active\n                ion.nextCheck(finalCallback)\n                active = true\n        return watchImmediate(object, delayedHandler)\n    diff = (oldValue, newValue) ->\n        # returns a patch which can convert from the oldValue to the newValue\n        # returns undefined if there is no difference between them\n        # the patch SHOULD be treated as readonly, since it may reference pre-existing objects\n        if oldValue is newValue\n            return undefined\n        if not(oldValue? and newValue? and typeof newValue is 'object' and typeof oldValue is 'object')\n            return newValue ? null\n        let patch = undefined\n        for name of oldValue if oldValue.hasOwnProperty(name)\n            if not newValue.hasOwnProperty(name)\n                patch ?= {}\n                patch[name] = null\n            else\n                let propertyDiff = diff(oldValue[name], newValue[name])\n                if propertyDiff isnt undefined\n                    patch ?= {}\n                    patch[name] = propertyDiff\n        for name of newValue if newValue.hasOwnProperty(name) and not oldValue.hasOwnProperty(name)\n            patch ?= {}\n            patch[name] = newValue[name]\n        return patch\n    isChange = (oldValue, newValue) ->\n        # returns true if a newValue will change the old value\n        # returns false if a newValue will not change the old value\n        if oldValue is newValue\n            return false\n        if not (oldValue? and newValue? and typeof newValue is 'object' and typeof oldValue is 'object')\n            return true\n        if Array.isArray(newValue) and JSON.stringify(oldValue) isnt JSON.stringify(newValue)\n            return true\n        for name of newValue\n            if not oldValue.hasOwnProperty(name)\n                if not newValue[name]?\n                    continue\n                else\n                    return true\n            if isChange(oldValue[name], newValue[name])\n                return true\n        return false\n    test = do ->\n        const equal = (a, b) -> not isChange(a, b) and not isChange(b, a)\n        return\n            merge: ->\n                assert equal({a:{b:2,c:3},d:4}, merge({a:{b:2}}, {a:{c:3},d:4}))\n                assert equal({b:2}, merge(null, {b:2}))\n                assert equal({a:1,b:2}, merge({a:1,b:2,c:3}, {c:undefined}))\n                let double = (x) -> x * 2\n                assert equal({a:double}, merge({},{a:double}))\n                assert equal({a:[]}, merge({a:[1,2]}, {a:[]}))\n            isChange: ->\n                assert isChange({a:1}, null)\n                assert not isChange(null, null)\n                assert isChange(undefined, null)\n                assert isChange(null, undefined)\n                assert not isChange({a:1}, {a:1})\n                assert not isChange({a:{b:2,c:3}}, {a:{b:2}})\n                assert isChange({a:{b:2}}, {a:{b:3}})\n                assert not isChange({a:1}, {b:null})\n                assert isChange({a:[1,2]}, {a:[]})\n            diff: ->\n                assert equal({b:2}, diff({a:1}, {a:1,b:2}))\n                assert equal({a:{b:3,c:null}}, diff({a:{b:2,c:4}}, {a:{b:3}}))\n                assert equal({a:1}, diff(null, {a:1}))\n                assert equal({c:{d:{f:4}}}, diff({a:1,b:2,c:{d:{e:1,f:2}}}, {a:1,b:2,c:{d:{e:1,f:4}}}))\n                assert equal(null, diff({a:1}, undefined))\n                assert equal(null, diff({a:1}, null))\n                assert equal(undefined, diff({a:{b:2}}, {a:{b:2}}))\n            observe: (done) ->\n                # console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>')\n                let source =\n                    name: 'Kris'\n                    age: 41\n                    children: \n                        Sadera:\n                            grandchildren:\n                                One: 1\n                                Two: 2\n                        Orion: {}\n                        Third: {}\n                let target = ion.clone(source, true)\n                let unwatch = watch(\n                    source\n                    (patch) ->\n                        # console.log(\"........... \" + JSON.stringify(patch))\n                        target = merge(target, patch)\n                        # should be immediate assert\n                        if equal(source, target)\n                            done()\n                            unwatch()\n                )\n                source:\n                    name: 'Fred'\n                    children:\n                        Orion:\n                            a: 1\n                            b: 2\n                            c: 12\n                        Sadera:\n                            grandchildren:\n                                three: 3\n                # todo: delete a property in a literal?\n                delete source.children.Third\n                # temp requirement\n                ion.checkForChanges()\n                # console.log('<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<')\n"]}