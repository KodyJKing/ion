// Generated by CoffeeScript 1.6.3
(function() {
  var Construct, Expression, Operation, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Operation = require('./Operation');

  Construct = require('./Construct');

  module.exports = Expression = (function(_super) {
    __extends(Expression, _super);

    function Expression() {
      _ref = Expression.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Expression.prototype.watch = function(watcher) {
      throw new Error("not implemented");
    };

    Expression.prototype.unwatch = function(watcher) {
      throw new Error("not implemented");
    };

    return Expression;

  })(Construct);

}).call(this);
