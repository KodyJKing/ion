// Generated by CoffeeScript 1.6.3
(function() {
  var Expression, StaticExpression,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Expression = require('./Expression');

  module.exports = StaticExpression = (function(_super) {
    __extends(StaticExpression, _super);

    function StaticExpression(properties) {
      StaticExpression.__super__.constructor.call(this, properties);
      Object.freeze(this);
    }

    StaticExpression.prototype.getValue = function() {
      return this.value;
    };

    StaticExpression.prototype.watch = function(watcher) {
      return watcher(this.value);
    };

    StaticExpression.prototype.unwatch = function(watcher) {
      return watcher(void 0);
    };

    return StaticExpression;

  })(Expression);

  module.exports.test = function() {
    var e, value, watcher;
    e = new StaticExpression({
      value: 12
    });
    if (e.getValue() !== 12) {
      throw "e.getValue() != 12";
    }
    e.value = 10;
    if (e.getValue() !== 12) {
      throw "e.getValue() != 12";
    }
    value = void 0;
    watcher = function(v) {
      return value = v;
    };
    e.watch(watcher);
    if (value !== 12) {
      throw "value != 12";
    }
    e.unwatch(watcher);
    if (value !== void 0) {
      throw "value != undefined";
    }
  };

}).call(this);
