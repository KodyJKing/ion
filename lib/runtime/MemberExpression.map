{"version":3,"sources":["MemberExpression.ion"],"names":["ion","DynamicExpression","Factory","MemberExpression","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":7,"column":8,"fixed":true,"source":"ion/runtime/MemberExpression.ion"},"end":{"line":7,"column":16,"fixed":true,"source":"ion/runtime/MemberExpression.ion"}}},"objectExpression","context","createRuntime","object","propertyExpression","computed","property","name","unobserveProperty","observe","propertyWatcher","propertyValue","toString","queueUpdate","unobserveObject","objectWatcher","objectValue","updateValue","deactivate","unobserveObjectValue","reason","nextTick","bind","value","isActive","existential","loc","start","source","hasOwnProperty","console","warn","toCode","line","column","setValue","observedObject","observedProperty","oldUnobserveObjectValue","changes","test"],"mappings":"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","sourcesContent":["const\n    ion = import '../'\n    {DynamicExpression,Factory} = import './'\n\nexport class MemberExpression extends DynamicExpression\n    properties:\n        activate: ->\n            super\n            @objectExpression ?= @context.createRuntime(@object)\n            @propertyExpression ?= @context.createRuntime(@computed ? @property : @property.name)\n\n            # observe the property first so it is available when we get the object\n            @unobserveProperty = @propertyExpression.observe(\n                @propertyWatcher ?= (propertyValue) =>\n                    # we convert to string since property indexers must always be treated as strings anyways in javascript\n                    propertyValue = propertyValue?.toString()\n                    if @propertyValue isnt propertyValue\n                        @propertyValue = propertyValue\n                        @queueUpdate(\"propertyChanged\")\n            )\n\n            @unobserveObject = @objectExpression.observe(\n                @objectWatcher ?= (objectValue) =>\n                    if @objectValue isnt objectValue\n                        @objectValue = objectValue\n                        @queueUpdate(\"objectChanged\")\n            )\n\n            @updateValue()\n\n        deactivate: ->\n            super\n            @unobserveObject?()\n            @unobserveObject = null\n            @unobserveProperty?()\n            @unobserveProperty = null\n            @unobserveObjectValue?()\n            @unobserveObjectValue = null\n        queueUpdate: (reason) ->\n            ion.nextTick(this.updateValue.bind(this))\n        updateValue: ->\n            let value = undefined\n            if @objectValue?\n                if @propertyValue?\n                    value = @objectValue[@propertyValue]\n            else if @isActive and not @existential and @loc?.start?.source? and @hasOwnProperty('objectValue') and @hasOwnProperty('propertyValue')\n                # we need to throw an exception here with location info\n                console.warn(\"Cannot read {{Factory.toCode(@property)}} property of {{@objectValue}} ({{Factory.toCode(@object)}}) ({{@loc.start.source}}:{{@loc.start.line}}:{{@loc.start.column + 1}})\")\n            @setValue(value)\n\n            # also observe the objectValue for changes\n            if @observedObject isnt @objectValue or @observedProperty isnt @propertyValue\n                @observedObject = @objectValue\n                @observedProperty = @propertyValue\n                # do NOT unobserve the old property until the new one has been observed.\n                # this will prevent unnecessary re-quering in the event that the observed item is the same.\n                let oldUnobserveObjectValue = @unobserveObjectValue\n                @unobserveObjectValue = null\n                if @objectValue?\n                    @unobserveObjectValue = ion.observe(\n                        @objectValue\n                        (changes) =>\n                            @queueUpdate(\"objectValueChanged\")\n                        {property:@propertyValue}\n                    )\n                # now we can release any previous observation.\n                oldUnobserveObjectValue?()\n\n        # # sets the underlying property value.  This may be used for two way binding.\n        # setMemberValue: (value) ->\n        #     console.log('setMemberValue BITCHES!', @objectValue, @propertyValue, value)\n        #     if @objectValue? and @propertyValue?\n        #         @objectValue[@propertyValue] = value\n    test: ->\n"]}