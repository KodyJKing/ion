{"version":3,"sources":["CallExpression.ion"],"names":["ion","DynamicExpression","ArrayExpression","args","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":9,"column":8,"fixed":true},"end":{"line":9,"column":16,"fixed":true}}},"calleeExpression","context","createRuntime","callee","watch","calleeWatcher","value","calleeValue","thisArg","objectExpression","unobserve","thisarg","thisObserver","template","deep","Array","isArray","patch","evaluate","observe","argumentExpressions","type","elements","arguments","observeElements","argumentWatcher","argumentsValue","deactivate","unwatch","templateWatcher","_evaluateInternal","isActive","apply","setValue","bind","create","DEBUG","e","console","error","stack","CallExpression","properties","module","exports"],"mappings":"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","sourcesContent":["const\r\n    ion = import '../'\r\n    DynamicExpression = import './DynamicExpression'\r\n    ArrayExpression = import './ArrayExpression'\r\n\r\nmodule.exports = class CallExpression extends DynamicExpression\r\n    properties:\r\n        args: null\r\n        activate: ->\r\n            super\r\n            @calleeExpression ?= @context.createRuntime(@callee)\r\n            @calleeExpression.watch(\r\n                @calleeWatcher ?= (value) =>\r\n                    @calleeValue = value\r\n                    # get thisArg and watch for changes\r\n                    let thisArg = @calleeExpression.objectExpression?.value\r\n                    if thisArg isnt @thisArg\r\n                        ion.unobserve(@thisarg, @thisObserver)\r\n                        @thisArg = thisArg\r\n                        if not @calleeValue?.template # we don't need to watch the thisArg if the callee is a template\r\n                            let deep = Array.isArray(thisArg)\r\n                            if deep\r\n                                # console.log('deep watch man-------------------------', thisArg, @calleeValue)\r\n                                # deep watch\r\n                                ion.patch.watch(\r\n                                    thisArg\r\n                                    @thisObserver ?= (patch) =>\r\n                                        # console.log('deep change', patch)\r\n                                        @evaluate()\r\n                                )\r\n                            else\r\n                                # shallow observe\r\n                                ion.observe(\r\n                                    thisArg\r\n                                    @thisObserver ?= =>\r\n                                        @evaluate()\r\n                                )\r\n                    @evaluate()\r\n            )\r\n            @argumentExpressions ?= @context.createRuntime({type:'ArrayExpression',elements:@arguments, observeElements:not @calleeValue?.template})\r\n            @argumentExpressions.watch(\r\n                @argumentWatcher ?= (value) =>\r\n                    @argumentsValue = value\r\n                    @evaluate()\r\n            )\r\n        deactivate: ->\r\n            super\r\n            @calleeExpression.unwatch(@calleeWatcher)\r\n            @argumentExpressions.unwatch(@argumentWatcher)\r\n            if @template?\r\n                @template.unwatch(@templateWatcher)\r\n                delete @template\r\n        _evaluateInternal: ->\r\n            if not (@isActive and @calleeValue? and @argumentsValue?)\r\n                return\r\n            let value = undefined\r\n            if @calleeValue.template\r\n                if @template?\r\n                    @template.unwatch(@templateWatcher)\r\n                # always use new on templates\r\n                @template = @calleeValue.apply(@thisArg, @argumentsValue)\r\n                @template.watch(@templateWatcher ?= @setValue.bind(@))\r\n            else\r\n                if @type is 'NewExpression'\r\n                    # create a new with variable args\r\n                    value = ion.create(@calleeValue, @argumentsValue)\r\n                else # @type is 'CallExpression'\r\n                    value = @calleeValue.apply(@thisArg, @argumentsValue)\r\n                @setValue(value)\r\n        if DEBUG\r\n            evaluate: ->\r\n                try\r\n                    @_evaluateInternal()\r\n                catch e\r\n                    # if we don't catch the errors, they might not be logged when occuring in an Object.observe callback\r\n                    console.error(e.stack ? e)\r\n        else\r\n            evaluate: -> @_evaluateInternal()\r\n"]}