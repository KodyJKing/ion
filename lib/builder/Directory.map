{"version":3,"sources":["Directory.ion"],"names":["global","Window","ion","fs","np","utility","watcher","File","Directory","constructor","path","String","properties","create",{"type":"Identifier","name":"create","loc":{"start":{"line":18,"column":8,"fixed":true,"source":"ion/builder/Directory.ion"},"end":{"line":18,"column":14,"fixed":true,"source":"ion/builder/Directory.ion"}}},"makeDirectories","exists","get","existsSync","toString","hasOwnProperty","getAbsoluteName","read","set","content","console","log","write","encoding","delete","getFile","getDirectory","getRelativeName","relative","join","search","include","exclude","options","initial","results","makeReactive","unwatch","watchDirectory","filename","file","modified","getModified","checkForChanges","files","list"],"mappings":"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","sourcesContent":["\nif global.Window\n    return\n\nconst\n    ion = import '../'\n    fs = import 'fs'\n    np = import 'path'\n    utility = import './utility'\n    watcher = import './watcher'\n    File = import './File'\n\nexport class Directory\n    constructor: (path) ->\n        if path?\n            @path = String(path)\n    properties:\n        create: ->\n            utility.makeDirectories(@path)\n        exists:\n            # exists is not reactive\n            get: -> fs.existsSync(@path)\n        path: '.'\n        toString: -> @path\n        get: (path) ->\n            # allow us to get our own properties\n            if @hasOwnProperty(path) or @[path]?\n                return @[path]\n\n            path = @getAbsoluteName(path)\n            if fs.existsSync(path)\n                return utility.read(path)\n            else\n                return undefined\n        set: (path, content) ->\n            if @hasOwnProperty(path) or @[path]?\n                return @[path] = content\n\n            path = @getAbsoluteName(path)\n            if content?\n                console.log(\"Writing: \" + path)\n            else\n                console.log(\"Deleting: \" + path)\n            utility.write(path, content)\n            return content\n        read: (path) ->\n            # allow us to get our own properties\n            if @hasOwnProperty(path) or @[path]?\n                return @[path]\n\n            path = @getAbsoluteName(path)\n            if fs.existsSync(path)\n                return utility.read(path)\n            else\n                return undefined\n        write: (path, content, encoding) ->\n            if not content?\n                return\n            if @hasOwnProperty(path) or @[path]?\n                return @[path] = content\n\n            path = @getAbsoluteName(path)\n            if utility.read(path, encoding) isnt content\n                console.log(\"Writing: \" + path)\n                utility.write(path, content, encoding)\n        delete: (path) ->\n            console.log(\"Deleting: \" + path)\n            path = @getAbsoluteName(path)\n            utility.write(path, null)\n        getFile: (path) -> new File(@getAbsoluteName(path))\n        getDirectory: (path) -> new Directory(@getAbsoluteName(path))\n        getRelativeName: (path) -> np.relative(@path, String(path))\n        getAbsoluteName: (path) -> np.join(@path, String(path))\n        search: (include, exclude, options) ->\n            options ?=\n                initial: false\n            if include?\n                options.include = include\n            if exclude?\n                options.exclude = exclude\n            let results = {}\n            ion.makeReactive(\n                results\n                =>\n                    let unwatch = watcher.watchDirectory(\n                        @path\n                        options\n                        (filename) =>\n                            let path = @getRelativeName(filename)\n                            if fs.existsSync(filename)\n                                if not results[path]?\n                                    results[path] = new File(filename)\n                                else\n                                    let file = results[path]\n                                    let modified = utility.getModified(filename)\n                                    if modified isnt file.modified\n                                        file.modified = modified\n                                    else\n                                        return\n                            else\n                                delete results[path]\n                            # explicit check is only because current\n                            # nodejs versions don't have Object.observe yet.\n                            ion.checkForChanges()\n                    )\n                    return unwatch\n            )\n            let files = utility.list(@path, options)\n            for path in files\n                results[@getRelativeName(path)] = new File(path)\n            return results\n\n\n\n"]}