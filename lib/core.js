// Generated by CoffeeScript 1.6.3
(function() {
  var getIndent, isEmpty, joinLines, lineDelimiter, observe, splitLines, unindent, unobserve;

  require('sugar');

  lineDelimiter = "\n";

  isEmpty = function(s) {
    return (s == null) || s.length === 0 || ((s.trim != null) && s.trim().length === 0);
  };

  getIndent = function(s) {
    return /^[ ]*/.exec(s)[0].length;
  };

  splitLines = function(s) {
    return s.split(lineDelimiter);
  };

  joinLines = function(array) {
    return array.join(lineDelimiter);
  };

  unindent = function(s) {
    var i, line, lines, minIndent, trim, _i, _j, _len, _len1;
    lines = splitLines(s.trimRight());
    minIndent = Number.MAX_VALUE;
    for (_i = 0, _len = lines.length; _i < _len; _i++) {
      line = lines[_i];
      if (!isEmpty(line)) {
        minIndent = Math.min(minIndent, getIndent(line));
      }
    }
    for (i = _j = 0, _len1 = lines.length; _j < _len1; i = ++_j) {
      line = lines[i];
      trim = isEmpty(line) ? getIndent(line) : minIndent;
      lines[i] = line.substring(trim);
    }
    return joinLines(lines).trim();
  };

  observe = function(object, observer) {
    if ((Object.observe != null) && typeof object === 'object') {
      return Object.observe(object, observer);
    }
  };

  unobserve = function(object, observer) {
    if ((Object.unobserve != null) && typeof object === 'object') {
      return Object.unobserve(object, observer);
    }
  };

  module.exports = {
    indentToken: "{{{{",
    outdentToken: "}}}}",
    splitLines: splitLines,
    joinLines: joinLines,
    getIndent: getIndent,
    unindent: unindent,
    observe: observe,
    unobserve: unobserve
  };

}).call(this);
