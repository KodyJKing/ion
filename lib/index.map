{"version":3,"sources":["index.ion"],"names":["ion","noop",{"type":"Identifier","name":"noop","loc":{"start":{"line":2,"column":6,"fixed":true,"source":"ion/index.ion"},"end":{"line":2,"column":10,"fixed":true,"source":"ion/index.ion"}}},"valueTypes","string","number","boolean","isValueType","object","primitive","function","isPrimitive","normalizeProperty","property","name","writable","value","Array","isArray","get","set","hasOwnProperty","normalizeProperties","properties","variableArgConstructs","type","a","nodeObserveShim","createShim","isObjectObservable","Node","global","NodeList","Location","console","log","runFile","file","require","patch","mergePatch","patchFunction","merge","key","create","args","length","nextTick","callback","process","setImmediate","id","clearImmediate","setTimeout","clearTimeout","requestAnimationFrame","throttleAnimation","awaitingCallbackArgs","animationFrameCallback","apply","prototype","slice","call","arguments","template","fn","createRuntime","ast","parent","Context","context","setVariableLiteral","clone","_deep","item","constructor","Object","observe","observer","options","removed","observable","addEventListener","onObserved","count","unobserve","removeEventListener","unObserved","warn","checkForChanges","changed","throttledCheck","bind","thisArg","newFn","add","container","originalItem","remove","capture","captureSuffix","endsWith","substring","nodeType","JSON","stringify","document","createTextNode","appendChild","push","removeSelf","parentNode","removeChild","lastIndexOf","removeAt","index","splice","onAdded","onRemoved","defineProperties","defineClass","definitions","classDefinition","super","match","Error","classFunction","eval","canSetClassProperty","descriptor","getOwnPropertyDescriptor","types","Set","i","definition","is","instance","makeReactive","activate","observeCount","deactivate","serialize","deserialize","extractType","typeKey","typeName","serializable","convertType","typedObject","parse","test","Foo","getValue","result","f","b","s","defineProperty","exports","enumerable","window"],"mappings":"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","sourcesContent":["const ion = null # shouldn't depend on itself\nconst noop = ->\n\nimport './es6'\n\nconst\n    valueTypes = {string:true,number:true,boolean:true}\n    isValueType = (object) -> not object? or valueTypes[typeof object] ? false\n    primitive = {string:true,number:true,boolean:true,function:true}\n    isPrimitive = (object) -> not object? or primitive[typeof object] or false\n    normalizeProperty = (property, name) ->\n        if typeof property is 'function'\n            property =\n                writable: false\n                value: property\n        else if isPrimitive(property) or Array.isArray(property)\n            property =\n                value: property\n\n        if not property.get? and not property.set? and not property.hasOwnProperty('value')\n            property.value = undefined\n\n        if property.hasOwnProperty('value')\n            property.writable ?= true\n\n        property.name = name\n\n        return property\n    normalizeProperties = (properties = {}) ->\n        for name, property of properties\n            properties[name] = normalizeProperty(property, name)\n        return properties\n    variableArgConstructs = []\n        (type, a) -> new type()\n        (type, a) -> new type(a[0])\n        (type, a) -> new type(a[0], a[1])\n        (type, a) -> new type(a[0], a[1], a[2])\n        (type, a) -> new type(a[0], a[1], a[2], a[3])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9])\n    nodeObserveShim = import('./es6/Object.observe').createShim()\n    isObjectObservable = do ->\n        let Node = global.Node ? ->\n        let NodeList = global.NodeList ? ->\n        let Location = global.Location ? ->\n        return (a) ->\n            if a instanceof Node or a instanceof NodeList or a instanceof Location\n                return false\n            return true\n\nconsole.log(\"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \" + nodeObserveShim)\n\nexport const\n    runFile = (file) -> require('./builder').runFile(file)\n    patch = do ->\n        let mergePatch = import './mergePatch'\n        let patchFunction = (object, patch) -> mergePatch.merge(object, patch)\n        for key, value of mergePatch\n            patchFunction[key] = value\n        return patchFunction\n    create = (type, args) -> variableArgConstructs[args.length](type, args)\n    nextTick = (callback) ->\n        if global.process?.nextTick?\n            global.process.nextTick(callback)\n        else\n            setImmediate(callback)\n    setImmediate = (callback) ->\n        if global.setImmediate?\n            let id = global.setImmediate(callback)\n            return -> global.clearImmediate(id)\n        else\n            let id = setTimeout(callback, 50)\n            return -> clearTimeout(id)\n    requestAnimationFrame = (callback) ->\n        if global.requestAnimationFrame?\n            return global.requestAnimationFrame(callback)\n        else\n            nextTick(callback)\n    throttleAnimation = (callback) ->\n        # ensures that a callback is not called any more often than an animation frame is available.\n        let awaitingCallbackArgs = null\n        let animationFrameCallback = ->\n            callback.apply(null, awaitingCallbackArgs)\n            awaitingCallbackArgs = null\n        return ->\n            if not awaitingCallbackArgs?\n                requestAnimationFrame(animationFrameCallback)\n            awaitingCallbackArgs = Array.prototype.slice.call(arguments, 0)\n    template = (fn, template) ->\n        fn.template = template ? true\n        return fn\n    createRuntime = (ast, args, parent) ->\n        const Context = import './runtime/Context'\n        const context = new Context(parent)\n        if args?\n            for name, value of args\n                context.setVariableLiteral(name, value)\n        return context.createRuntime(ast)\n    clone = (object, _deep = false) ->\n        if Array.isArray(object)\n            return [_deep ? clone(item, _deep) : item for item in object]\n        else if object?.constructor is Object\n            return {}\n                for key, value of object\n                    [key]: _deep ? clone(value, _deep) : value\n        else\n            return object\n    # observers = []\n    observe = (object, observer, options) ->\n        # let original = observer\n        if object is global or object is console or isValueType(object)\n            return noop\n        let property = options?.property\n        let removed = false\n        # property is optional\n        let observable = isObjectObservable(object)\n\n        if not observable\n            if not property?\n                return noop\n            nodeObserveShim.observe(object, observer, property)\n            # console.log('observe shim ' + JSON.stringify(object))\n        else if object? and observer? and typeof object is 'object'\n            nodeObserveShim.observe(object, observer)\n            # console.log('observe ' + JSON.stringify(object))\n            # watch change on dom elements\n            object.addEventListener?('change', observer)\n        object?.onObserved?(observer, property)\n        # return a function that can be used to unboserve\n        observe.count = (observe.count ? 0) + 1\n        # observers.push(original)\n        return ->\n            # observers.remove(original)\n            if not removed\n                # console.log('removing')\n                observe.count--\n                removed = true\n                if not observable\n                    nodeObserveShim.unobserve(object, observer, property)\n                    # console.log('unobserve shim ' + JSON.stringify(object))\n                else if object? and observer? and Object.unobserve? and typeof object is 'object'\n                    Object.unobserve(object, observer)\n                    # console.log('unobserve ' + JSON.stringify(object))\n                    # unwatch change on dom elements\n                    object.removeEventListener?('change', observer)\n                object?.unObserved?(observer, property)\n            else\n                # debugger\n                console.warn(\"unobserve should not be called multiple times!\")\n    checkForChanges = nodeObserveShim.checkForChanges\n    changed = do ->\n        let throttledCheck = throttleAnimation(checkForChanges)\n        return (object) ->\n            nodeObserveShim.changed(object)\n            throttledCheck()\n    bind = (fn, thisArg) ->\n        let newFn = fn.bind(thisArg)\n        # the function name has semantic meaning for us when adding a function to an element\n        # (see add function below)\n        # so we copy the function name to the new bound function id property when binding\n        # (function.name is readonly)\n        if fn.name?.length > 0\n            newFn.id = fn.id ? fn.name\n        return newFn\n    add = (container, item) ->\n        let originalItem = item\n        let remove\n        if typeof item is 'function' and (item.name?.length > 0 or item.id?) and typeof container.addEventListener is 'function'\n            let name = item.id ? item.name\n            let capture = false\n            let captureSuffix = '_capture'\n            if name.endsWith(captureSuffix)\n                capture = true\n                name = name.substring(0, name.length - captureSuffix.length)\n            # we wrap all event handlers and call checkForChanges after\n            item = ->\n                originalItem.apply(@, arguments)\n                checkForChanges()\n            container.addEventListener(name, item, capture)\n            remove = ->\n                container.removeEventListener(name, item)\n        else\n            # console.log('+', originalItem)\n            # if originalItem is 'High'\n            #     debugger\n            if container.nodeType is 1\n                if typeof item isnt 'string' and not item?.nodeType?\n                    item = JSON.stringify(item)\n                if typeof item is 'string'\n                    item = document.createTextNode(item)\n                container.appendChild(item)\n            else if container.push?\n                container.push(item)\n            else\n                container.add(item)\n            remove = ->\n                # console.log('-', originalItem)\n                # if originalItem is 'High'\n                #     debugger\n                if item?.removeSelf?\n                    item.removeSelf()\n                else if item?.parentNode?\n                    item.parentNode.removeChild(item)\n                else if container.lastIndexOf? and container.removeAt?\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.removeAt(index)\n                else if typeof container.remove is 'function'\n                    container.remove(item)\n                else if Array.isArray(container)\n                    let index = container.lastIndexOf(item)\n                    if index >= 0\n                        container.splice(index, 1)\n\n        item?.onAdded?(container)\n        # returns a function which can be used to remove the item\n        return ->\n            remove()\n            item?.onRemoved?(container)\n    defineProperties = (object, properties) -> Object.defineProperties(object, normalizeProperties(properties))\n    defineClass = (...definitions) ->\n        const classDefinition = definitions[0]\n        if definitions[1] is undefined\n            # extend our base object by default unless user sets extends to null explicitly.\n            definitions[1] = import './Object'\n        classDefinition.super = definitions[1]\n        const name = classDefinition.name ? classDefinition.id?.match(/([a-z_0-9\\$]+)(\\.js)?$/i)?[1]\n        if not name?\n            throw new Error('missing name property')\n        let classFunction\n        if classDefinition.hasOwnProperty('constructor')\n            classFunction = classDefinition.constructor\n        else if classDefinition.super?\n            classFunction = eval(\"(function {{name}}() { {{name}}.super.apply(this, arguments); })\")\n        else\n            classFunction = eval(\"(function {{name}}() {})\")\n\n        # successively merge patch the definitions onto the new class\n        let canSetClassProperty = (key) ->\n            if key is 'name'\n                return false\n            let descriptor = Object.getOwnPropertyDescriptor(classFunction, key)\n            return not descriptor? or descriptor.writable or not descriptor.get?\n\n        let types = new Set()   # a map of all types\n        types.add(classFunction)\n        for let i = definitions.length - 1; i >= 0; i--\n            let definition = definitions[i]\n            if definition?\n                types.add(definition)\n                for key, value of definition if key isnt 'test' or i is 0\n                    if canSetClassProperty(key)\n                        classFunction[key] = patch(classFunction[key], value)\n                        \n        classFunction.types = types\n\n        if classFunction.properties?\n            defineProperties(classFunction.prototype, classFunction.properties)\n\n        return classFunction\n    is = (instance, type) ->\n        if not instance?\n            return false\n        if not type?\n            return true\n        if typeof type is 'function'\n            if typeof instance.is is 'function'\n                return instance.is(type)\n            return instance instanceof type\n        else\n            return instance is type\n    makeReactive = (object, activate) ->\n        let observeCount = 0\n        let deactivate = null\n        return Object.defineProperties(\n            object\n            {}\n                onObserved:\n                    value: ->\n                        observeCount++\n                        if observeCount is 1\n                            deactivate = activate.call(object)\n                unObserved:\n                    value: ->\n                        observeCount--\n                        if observeCount is 0\n                            deactivate?()\n        )\n    serialize = (object) -> JSON.stringify(object)\n    deserialize = do ->\n        let extractType = (object) ->\n            let typeKey = import('ion/Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if not typeName?\n                return Object\n            let type = import(typeName)\n            if not type.serializable\n                throw new Error(\"Type is not serializable: {{ typeName }}\")\n            # remove the type field from the source object\n            delete object[typeKey]\n            return type\n        let convertType = (object) ->\n            let typeKey = import('ion/Object').typeKey\n            # we should strongly type our objects when created, so make a factory\n            let typeName = object[typeKey]\n            if typeName?\n                let type = import(typeName)\n                if not type.serializable\n                    throw new Error(\"Type is not serializable: {{ typeName }}\")\n                let typedObject = new type\n                for key, value of object if key isnt typeKey\n                    typedObject[key] = value\n                object = typedObject\n            # convert recursively\n            for key, value of object\n                if value?.constructor is Object\n                    object[key] = convertType(value)\n            return object\n        let deserialize = (object) ->\n            if typeof object is 'string'\n                object = JSON.parse(object)\n\n            return convertType(object)\n        deserialize.extractType = extractType\n        deserialize.convertType = convertType\n        return deserialize\n    test =\n        defineClass: ->\n            const Foo = defineClass(\n                {}\n                    id: \"Foo\"\n                    constructor: (number) ->\n                        @number = number\n                    properties:\n                        getValue: -> @number\n            )\n            assert new Foo(2).getValue() is 2\n        defineProperties:\n            \"should allow primitive values\": ->\n                const object = {}\n                const result = defineProperties(\n                    object\n                    {}\n                        f: -> \"function\"\n                        i: 2\n                        b: true\n                        a: []\n                        s: \"hello\"\n                )\n                assert object is result\n                assert typeof object.f is 'function'\n                assert object.f() is 'function'\n                assert object.i is 2\n                assert object.b is true\n                assert Array.isArray(object.a)\n                assert object.s is 'hello'\n\nfor name in [\"runtime\", \"compiler\", \"builder\", \"browser\"]\n    do (name) ->\n        Object.defineProperty(exports, name, {enumerable: true, get: -> require(\"./\" + name)})\n\n# if window, then on resize, check for changes\nif global.window?\n    global.window.addEventListener('resize', checkForChanges)"]}