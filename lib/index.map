{"version":3,"sources":["index.ion"],"names":["ion","global","DEBUG","primitive","string","number","boolean","function","isPrimitive",{"type":"Identifier","name":"isPrimitive","loc":{"start":{"line":9,"column":4,"fixed":true},"end":{"line":9,"column":15,"fixed":true}}},"object","normalizeProperty","property","name","writable","value","Array","isArray","get","set","hasOwnProperty","normalizeProperties","properties","variableArgConstructs","type","a","nodeObserveShim","Object","observe","checkForChanges","createShim","isObjectObservable","Node","NodeList","patch","mergePatch","merge","key","create","args","length","template","fn","createRuntime","ast","Context","context","setVariableLiteral","nextTick","process","setTimeout","clone","deep","item","constructor","observer","console","tryWrapper","changes","error","addEventListener","onObserved","unobserve","removeEventListener","unObserved","bind","thisArg","newFn","id","add","container","remove","capture","captureSuffix","endsWith","substring","originalItem","apply","arguments","nodeType","JSON","stringify","document","createTextNode","appendChild","parentNode","removeChild","push","lastIndexOf","removeAt","index","splice","onAdded","onRemoved","defineProperties","defineClass","definitions","classDefinition","super","match","Error","classFunction","eval","canSetClassProperty","descriptor","getOwnPropertyDescriptor","types","Set","i","definition","prototype","is","instance","makeReactive","activate","observeCount","deactivate","call","serialize","deserialize","extractType","typeKey","typeName","serializable","parse","typedObject","test","Foo","getValue","result","f","b","s","window"],"mappings":"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","sourcesContent":["const ion = null # shouldn't depend on itself\r\n\r\nimport './es6'\r\n\r\nglobal.DEBUG ?= false\r\n\r\nconst\r\n    primitive = {string:true,number:true,boolean:true,function:true}\r\n    isPrimitive = (object) -> not object? or primitive[typeof object] or false\r\n    normalizeProperty = (property, name) ->\r\n        if typeof property is 'function'\r\n            property =\r\n                writable: false\r\n                value: property\r\n        else if isPrimitive(property) or Array.isArray(property)\r\n            property =\r\n                value: property\r\n\r\n        if not property.get? and not property.set? and not property.hasOwnProperty('value')\r\n            property.value = undefined\r\n\r\n        if property.hasOwnProperty('value')\r\n            property.writable ?= true\r\n\r\n        property.name = name\r\n\r\n        return property\r\n    normalizeProperties = (properties = {}) ->\r\n        for name, property of properties\r\n            properties[name] = normalizeProperty(property, name)\r\n        return properties\r\n    variableArgConstructs = []\r\n        (type, a) -> new type()\r\n        (type, a) -> new type(a[0])\r\n        (type, a) -> new type(a[0], a[1])\r\n        (type, a) -> new type(a[0], a[1], a[2])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])\r\n        (type, a) -> new type(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9])\r\n    nodeObserveShim = Object.observe?.checkForChanges ? Object : import('./es6/Object.observe').createShim()\r\n    isObjectObservable = do ->\r\n        let Node = global.Node ? ->\r\n        let NodeList = global.NodeList ? ->\r\n        return (a) ->\r\n            if a instanceof Node or a instanceof NodeList\r\n                return false\r\n            return true\r\n\r\nexport const\r\n    patch = do ->\r\n        let mergePatch = import './mergePatch'\r\n        let patch = (object, patch) -> mergePatch.merge(object, patch)\r\n        for key, value of mergePatch\r\n            patch[key] = value\r\n        return patch\r\n    create = (type, args) -> variableArgConstructs[args.length](type, args)\r\n    template = (fn, template) ->\r\n        fn.template = template ? true\r\n        return fn\r\n    createRuntime = (ast, args) ->\r\n        const Context = import './runtime/Context'\r\n        const context = new Context()\r\n        if args?\r\n            for name, value of args\r\n                context.setVariableLiteral(name, value)\r\n        return context.createRuntime(ast)\r\n    nextTick = @process?.nextTick ? (fn) -> setTimeout(fn, 0)\r\n    clone = (object, deep = false) ->\r\n        if Array.isArray(object)\r\n            return [deep ? clone(item, deep) : item for item in object]\r\n        else if object?.constructor is Object\r\n            return {}\r\n                for key, value of object\r\n                    [key]: deep ? clone(value, deep) : value\r\n        else\r\n            return object\r\n    observe = (object, observer, property) ->\r\n        if object is global or object is console\r\n            return\r\n        # property is optional\r\n        if not isObjectObservable(object)\r\n            if not property?\r\n                return\r\n            nodeObserveShim.observe(object, observer, property)\r\n        else if object? and observer? and Object.observe? and typeof object is 'object'\r\n            if DEBUG\r\n                observer.tryWrapper ?= (changes) ->\r\n                    try\r\n                        observer(changes)\r\n                    catch error\r\n                        console.error('Exception in Object.observe callback', error)\r\n            Object.observe(object, observer.tryWrapper ? observer)\r\n            # watch change on dom elements\r\n            object.addEventListener?('change', observer)\r\n        object?.onObserved?(observer, property)\r\n    unobserve = (object, observer, property) ->\r\n        # property is optional\r\n        if not isObjectObservable(object)\r\n            if not property?\r\n                return\r\n            nodeObserveShim.unobserve(object, observer, property)\r\n        else if object? and observer? and Object.unobserve? and typeof object is 'object'\r\n            Object.unobserve(object, observer.tryWrapper ? observer)\r\n            # unwatch change on dom elements\r\n            object.removeEventListener?('change', observer)\r\n        object?.unObserved?(observer, property)\r\n    checkForChanges = ->\r\n        if Object.observe.checkForChanges?\r\n            Object.observe.checkForChanges()\r\n        else\r\n            nodeObserveShim.observe.checkForChanges()\r\n    bind = (fn, thisArg) ->\r\n        let newFn = fn.bind(thisArg)\r\n        # the function name has semantic meaning for us when adding a function to an element\r\n        # (see add function below)\r\n        # so we copy the function name to the new bound function id property when binding\r\n        # (function.name is readonly)\r\n        if fn.name?.length > 0\r\n            newFn.id = fn.id ? fn.name\r\n        return newFn\r\n    add = (container, item) ->\r\n        let remove\r\n        if typeof item is 'function' and (item.name?.length > 0 or item.id?) and typeof container.addEventListener is 'function'\r\n            let name = item.id ? item.name\r\n            let capture = false\r\n            let captureSuffix = '_capture'\r\n            if name.endsWith(captureSuffix)\r\n                capture = true\r\n                name = name.substring(0, name.length - captureSuffix.length)\r\n            # if this platform doesn't have native Object.observe\r\n            # then we wrap all event handlers and call checkForChanges after\r\n            if Object.observe?.checkForChanges?\r\n                let originalItem = item\r\n                item = ->\r\n                    originalItem.apply(@, arguments)\r\n                    Object.observe.checkForChanges()\r\n            container.addEventListener(name, item, capture)\r\n            remove = ->\r\n                container.removeEventListener(name, item)\r\n        else if container.nodeType is 1\r\n            if typeof item isnt 'string' and not item.nodeType?\r\n                item = JSON.stringify(item)\r\n            if typeof item is 'string'\r\n                item = document.createTextNode(item)\r\n            container.appendChild(item)\r\n            remove = ->\r\n                if item.parentNode is container\r\n                    container.removeChild(item)\r\n        else\r\n            if container.push?\r\n                container.push(item)\r\n            else\r\n                container.add(item)\r\n            remove = ->\r\n                if container.lastIndexOf? and container.removeAt?\r\n                    let index = container.lastIndexOf(item)\r\n                    if index >= 0\r\n                        container.removeAt(index)\r\n                else if typeof container.remove is 'function'\r\n                    container.remove(item)\r\n                else if Array.isArray(container)\r\n                    let index = container.lastIndexOf(item)\r\n                    if index >= 0\r\n                        container.splice(index, 1)\r\n\r\n        item?.onAdded?(container)\r\n        # returns a function which can be used to remove the item\r\n        return ->\r\n            remove()\r\n            item?.onRemoved?(container)\r\n    defineProperties = (object, properties) -> Object.defineProperties(object, normalizeProperties(properties))\r\n    defineClass = (...definitions) ->\r\n        const classDefinition = definitions[0]\r\n        if definitions[1] is undefined\r\n            # extend our base object by default unless user sets extends to null explicitly.\r\n            definitions[1] = import './Object'\r\n        classDefinition.super = definitions[1]\r\n        const name = classDefinition.name ? classDefinition.id?.match(/([a-z_0-9\\$]+)(\\.js)?$/i)?[1]\r\n        if not name?\r\n            throw new Error('missing name property')\r\n        let classFunction\r\n        if classDefinition.hasOwnProperty('constructor')\r\n            classFunction = classDefinition.constructor\r\n        else if classDefinition.super?\r\n            classFunction = eval(\"(function {{name}}() { {{name}}.super.apply(this, arguments); })\")\r\n        else\r\n            classFunction = eval(\"(function {{name}}() {})\")\r\n\r\n        # successively merge patch the definitions onto the new class\r\n        let canSetClassProperty = (key) ->\r\n            if key is 'name'\r\n                return false\r\n            let descriptor = Object.getOwnPropertyDescriptor(classFunction, key)\r\n            return not descriptor? or descriptor.writable or not descriptor.get?\r\n\r\n        let types = new Set()   # a map of all types\r\n        types.add(classFunction)\r\n        for let i = definitions.length - 1; i >= 0; i--\r\n            let definition = definitions[i]\r\n            if definition?\r\n                types.add(definition)\r\n                for key, value of definition if key isnt 'test' or i is 0\r\n                    if canSetClassProperty(key)\r\n                        classFunction[key] = patch(classFunction[key], value)\r\n        classFunction.types = types\r\n\r\n        if classFunction.properties?\r\n            defineProperties(classFunction.prototype, classFunction.properties)\r\n\r\n        return classFunction\r\n    is = (instance, type) ->\r\n        if not instance?\r\n            return false\r\n        if not type?\r\n            return true\r\n        if typeof type is 'function'\r\n            if typeof instance.is is 'function'\r\n                return instance.is(type)\r\n            return instance instanceof type\r\n        else\r\n            return instance is type\r\n    makeReactive = (object, activate) ->\r\n        let observeCount = 0\r\n        let deactivate = null\r\n        return Object.defineProperties(\r\n            object\r\n            {}\r\n                onObserved:\r\n                    value: ->\r\n                        observeCount++\r\n                        if observeCount is 1\r\n                            deactivate = activate.call(object)\r\n                unObserved:\r\n                    value: ->\r\n                        observeCount--\r\n                        if observeCount is 0\r\n                            deactivate?()\r\n        )\r\n    serialize = (object) -> JSON.stringify(object)\r\n    deserialize = do ->\r\n        let extractType = (object) ->\r\n            let typeKey = import('ion/Object').typeKey\r\n            # we should strongly type our objects when created, so make a factory\r\n            let typeName = object[typeKey]\r\n            if not typeName?\r\n                return Object\r\n            let type = import(typeName)\r\n            if not type.serializable\r\n                throw new Error(\"Type is not serializable: {{ typeName }}\")\r\n            # remove the type field from the source object\r\n            delete object[typeKey]\r\n            return type\r\n        let deserialize = (object) ->\r\n            if typeof object is 'string'\r\n                object = JSON.parse(object)\r\n            let typeKey = import('ion/Object').typeKey\r\n            # we should strongly type our objects when created, so make a factory\r\n            let typeName = object[typeKey]\r\n            if typeName?\r\n                let type = import(typeName)\r\n                if not type.serializable\r\n                    throw new Error(\"Type is not serializable: {{ typeName }}\")\r\n                let typedObject = new type\r\n                for key, value of object if key isnt typeKey\r\n                    typedObject[key] = object[key]\r\n                return typedObject\r\n            else\r\n                return object\r\n        deserialize.extractType = extractType\r\n        return deserialize\r\n    test =\r\n        defineClass: ->\r\n            const Foo = defineClass(\r\n                {}\r\n                    id: \"Foo\"\r\n                    constructor: (number) ->\r\n                        @number = number\r\n                    properties:\r\n                        getValue: -> @number\r\n            )\r\n            assert new Foo(2).getValue() is 2\r\n        defineProperties:\r\n            \"should allow primitive values\": ->\r\n                const object = {}\r\n                const result = defineProperties(\r\n                    object\r\n                    {}\r\n                        f: -> \"function\"\r\n                        i: 2\r\n                        b: true\r\n                        a: []\r\n                        s: \"hello\"\r\n                )\r\n                assert object is result\r\n                assert typeof object.f is 'function'\r\n                assert object.f() is 'function'\r\n                assert object.i is 2\r\n                assert object.b is true\r\n                assert Array.isArray(object.a)\r\n                assert object.s is 'hello'\r\n\r\n# if window, then on resize, check for changes\r\nif global.window?\r\n    global.window.addEventListener('resize', checkForChanges)\r\n"]}